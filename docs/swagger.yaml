basePath: /swagger/datahub-service
definitions:
  basic_library.BatchDeleteResponse:
    properties:
      deleted_count:
        type: integer
      errors:
        items:
          type: string
        type: array
      failed_ids:
        items:
          type: string
        type: array
    type: object
  basic_library.PaginationInfo:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  basic_library.SyncTaskExecutionListResponse:
    properties:
      executions:
        items:
          $ref: '#/definitions/models.SyncTaskExecution'
        type: array
      pagination:
        $ref: '#/definitions/basic_library.PaginationInfo'
    type: object
  basic_library.SyncTaskListResponse:
    properties:
      pagination:
        $ref: '#/definitions/basic_library.PaginationInfo'
      tasks:
        items:
          $ref: '#/definitions/models.SyncTask'
        type: array
    type: object
  basic_library.SyncTaskStatistics:
    properties:
      cancelled_tasks:
        type: integer
      failed_tasks:
        type: integer
      pending_tasks:
        type: integer
      running_tasks:
        type: integer
      success_rate:
        type: number
      success_tasks:
        type: integer
      total_tasks:
        type: integer
    type: object
  basic_library.SyncTaskStatusResponse:
    properties:
      error:
        type: string
      processor:
        type: string
      progress:
        $ref: '#/definitions/models.SyncProgress'
      result:
        $ref: '#/definitions/models.SyncResult'
      start_time:
        type: string
      status:
        type: string
      task:
        $ref: '#/definitions/models.SyncTask'
    type: object
  controllers.APIResponse:
    properties:
      data: {}
      msg:
        example: 操作成功
        type: string
      status:
        example: 0
        type: integer
    type: object
  controllers.AccessLevelCount:
    properties:
      access_level:
        type: string
      count:
        type: integer
    type: object
  controllers.ApiApplicationListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.ApiApplication'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ApiApplicationStats:
    properties:
      application_id:
        type: string
      application_name:
        type: string
      call_count:
        type: integer
      last_call_time:
        type: string
    type: object
  controllers.ApiCallTrendData:
    properties:
      call_count:
        type: integer
      date:
        type: string
    type: object
  controllers.ApiRateLimitListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.ApiRateLimit'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ApiUsageLogListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.ApiUsageLog'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ApproveDataAccessRequestRequest:
    properties:
      approved:
        type: boolean
      comment:
        type: string
    type: object
  controllers.BasicLibraryListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.BasicLibrary'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.BasicLibraryStats:
    properties:
      active_data_sources:
        description: 活跃数据源
        type: integer
      active_interfaces:
        description: 活跃接口
        type: integer
      active_libraries:
        description: 活跃数
        type: integer
      category_breakdown:
        description: 分类统计
        items:
          $ref: '#/definitions/controllers.CategoryCount'
        type: array
      inactive_libraries:
        description: 非活跃数
        type: integer
      recent_libraries:
        description: 最近创建的库
        items:
          $ref: '#/definitions/controllers.RecentLibraryInfo'
        type: array
      top_data_sources:
        description: 数据源使用排行
        items:
          $ref: '#/definitions/controllers.DataSourceUsageStats'
        type: array
      total_data_sources:
        description: 数据源总数
        type: integer
      total_interfaces:
        description: 接口总数
        type: integer
      total_libraries:
        description: 总数
        type: integer
    type: object
  controllers.BatchDeleteRequest:
    properties:
      task_ids:
        items:
          type: string
        type: array
    required:
    - task_ids
    type: object
  controllers.BroadcastEventRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      event_type:
        example: system_notification
        type: string
    type: object
  controllers.CategoryCount:
    properties:
      category:
        type: string
      count:
        type: integer
    type: object
  controllers.ColumnInfo:
    properties:
      comment:
        type: string
      data_type:
        type: string
      default_value: {}
      format:
        type: string
      id:
        type: string
      identity_generation:
        type: string
      is_generated:
        type: boolean
      is_identity:
        type: boolean
      is_nullable:
        type: boolean
      is_updatable:
        type: boolean
      name:
        type: string
    type: object
  controllers.CreateApiApplicationRequest:
    properties:
      contact_person:
        type: string
      contact_phone:
        type: string
      description:
        type: string
      name:
        type: string
      path:
        type: string
      thematic_library_id:
        type: string
    required:
    - contact_person
    - contact_phone
    - name
    - path
    - thematic_library_id
    type: object
  controllers.CreateApiInterfaceRequest:
    properties:
      api_application_id:
        type: string
      description:
        type: string
      path:
        type: string
      thematic_interface_id:
        type: string
    required:
    - api_application_id
    - path
    - thematic_interface_id
    type: object
  controllers.CreateApiKeyRequest:
    properties:
      application_ids:
        description: 关联的应用ID列表
        items:
          type: string
        minItems: 1
        type: array
      description:
        type: string
      expires_at:
        type: string
      name:
        type: string
    required:
    - application_ids
    - name
    type: object
  controllers.CreateApiKeyResponse:
    properties:
      api_key:
        $ref: '#/definitions/models.ApiKey'
      key_value:
        description: 完整的Key值，仅返回一次
        type: string
    type: object
  controllers.CreateThematicInterfaceViewRequest:
    properties:
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      view_sql:
        example: SELECT * FROM users WHERE status = 'active'
        type: string
    required:
    - interface_id
    - view_sql
    type: object
  controllers.DashboardOverviewResponse:
    properties:
      basic_library_stats:
        allOf:
        - $ref: '#/definitions/controllers.BasicLibraryStats'
        description: 基础库统计
      data_quality_stats:
        allOf:
        - $ref: '#/definitions/controllers.DataQualityStats'
        description: 数据质量统计
      data_sharing_stats:
        allOf:
        - $ref: '#/definitions/controllers.DataSharingStats'
        description: 数据共享统计
      sync_task_stats:
        allOf:
        - $ref: '#/definitions/controllers.SyncTaskStats'
        description: 同步任务统计
      system_activity_stats:
        allOf:
        - $ref: '#/definitions/controllers.SystemActivityStats'
        description: 系统活动统计
      thematic_library_stats:
        allOf:
        - $ref: '#/definitions/controllers.ThematicLibraryStats'
        description: 主题库统计
      updated_at:
        description: 更新时间
        type: string
    type: object
  controllers.DataAccessRequestListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.DataAccessRequest'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.DataGovernanceMetadataResponse:
    properties:
      cleansing_rule_types:
        items:
          $ref: '#/definitions/meta.CleansingRuleType'
        type: array
      lineage_relation_types:
        description: 血缘关系相关
        items:
          $ref: '#/definitions/meta.LineageRelationType'
        type: array
      masking_types:
        description: 脱敏和清洗相关
        items:
          $ref: '#/definitions/meta.DataMaskingType'
        type: array
      metadata_types:
        items:
          $ref: '#/definitions/meta.MetadataType'
        type: array
      object_types:
        description: 对象和任务相关
        items:
          $ref: '#/definitions/meta.DataGovernanceObjectType'
        type: array
      quality_check_statuses:
        items:
          $ref: '#/definitions/meta.QualityCheckStatus'
        type: array
      quality_issue_severities:
        description: 问题管理相关
        items:
          $ref: '#/definitions/meta.QualityIssueSeverity'
        type: array
      quality_issue_statuses:
        items:
          $ref: '#/definitions/meta.QualityIssueStatus'
        type: array
      quality_metric_types:
        description: 质量指标和报告相关
        items:
          $ref: '#/definitions/meta.QualityMetricType'
        type: array
      quality_report_types:
        items:
          $ref: '#/definitions/meta.QualityReportType'
        type: array
      quality_rule_types:
        description: 质量规则相关
        items:
          $ref: '#/definitions/meta.QualityRuleType'
        type: array
      task_statuses:
        items:
          $ref: '#/definitions/meta.TaskStatus'
        type: array
      task_types:
        items:
          $ref: '#/definitions/meta.TaskType'
        type: array
      transformation_rule_types:
        description: 转换和校验相关
        items:
          $ref: '#/definitions/meta.TransformationRuleType'
        type: array
      validation_rule_types:
        items:
          $ref: '#/definitions/meta.ValidationRuleType'
        type: array
    type: object
  controllers.DataInterfaceListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.DataInterface'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.DataQualityStats:
    properties:
      avg_quality_score:
        description: 平均质量分数
        type: number
      enabled_quality_rules:
        description: 启用的规则
        type: integer
      issue_severity_stats:
        description: 问题严重程度统计
        items:
          $ref: '#/definitions/controllers.IssueSeverityCount'
        type: array
      issue_type_stats:
        description: 问题类型统计
        items:
          $ref: '#/definitions/controllers.IssueTypeCount'
        type: array
      quality_issue_count:
        description: 质量问题数量
        type: integer
      quality_trend_data:
        description: 质量趋势
        items:
          $ref: '#/definitions/controllers.QualityTrendData'
        type: array
      recent_quality_reports:
        description: 最近质量报告
        items:
          $ref: '#/definitions/controllers.RecentQualityReport'
        type: array
      rule_type_breakdown:
        description: 规则类型分布
        items:
          $ref: '#/definitions/controllers.RuleTypeCount'
        type: array
      running_quality_tasks:
        description: 运行中的任务
        type: integer
      total_cleansing_rules:
        description: 清洗规则总数
        type: integer
      total_masking_rules:
        description: 脱敏规则总数
        type: integer
      total_quality_reports:
        description: 质量报告总数
        type: integer
      total_quality_rules:
        description: 质量规则总数
        type: integer
      total_quality_tasks:
        description: 质量检测任务总数
        type: integer
    type: object
  controllers.DataSharingStats:
    properties:
      active_api_applications:
        description: 活跃应用
        type: integer
      active_api_keys:
        description: 活跃密钥
        type: integer
      active_data_subscriptions:
        description: 活跃订阅
        type: integer
      api_call_trend_data:
        description: API调用趋势
        items:
          $ref: '#/definitions/controllers.ApiCallTrendData'
        type: array
      approved_access_requests:
        description: 已批准申请
        type: integer
      error_rate_stats:
        allOf:
        - $ref: '#/definitions/controllers.ErrorRateStatistics'
        description: 错误率统计
      pending_access_requests:
        description: 待审批申请
        type: integer
      recent_api_usage_logs:
        description: 最近API使用日志
        items:
          $ref: '#/definitions/controllers.RecentApiUsageLog'
        type: array
      response_time_stats:
        allOf:
        - $ref: '#/definitions/controllers.ResponseTimeStatistics'
        description: 响应时间统计
      today_api_calls:
        description: 今日调用
        type: integer
      top_api_applications:
        description: 热门应用
        items:
          $ref: '#/definitions/controllers.ApiApplicationStats'
        type: array
      total_access_requests:
        description: 访问申请总数
        type: integer
      total_api_applications:
        description: API应用总数
        type: integer
      total_api_calls:
        description: API调用总数
        type: integer
      total_api_interfaces:
        description: API接口总数
        type: integer
      total_api_keys:
        description: API密钥总数
        type: integer
      total_data_subscriptions:
        description: 数据订阅总数
        type: integer
    type: object
  controllers.DataSourceListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.DataSource'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.DataSourceTestRequest:
    properties:
      config:
        additionalProperties: true
        description: 额外测试配置
        type: object
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      test_type:
        description: connection, data_preview
        example: connection
        type: string
    required:
    - data_source_id
    - test_type
    type: object
  controllers.DataSourceTestResponse:
    properties:
      data:
        description: 预览数据
      duration:
        description: 测试耗时（毫秒）
        example: 250
        type: integer
      error:
        description: 错误信息
        example: ""
        type: string
      message:
        example: 连接成功
        type: string
      metadata:
        additionalProperties: true
        description: 元数据信息
        type: object
      success:
        example: true
        type: boolean
      suggestions:
        description: 优化建议
        example:
        - 检查网络连接
        - 验证数据库权限
        items:
          type: string
        type: array
      test_type:
        example: connection
        type: string
    type: object
  controllers.DataSourceUsageStats:
    properties:
      data_source_id:
        type: string
      data_source_name:
        type: string
      last_used_at:
        type: string
      usage_count:
        type: integer
    type: object
  controllers.DataSubscriptionListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.DataSubscription'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.DomainCount:
    properties:
      count:
        type: integer
      domain:
        type: string
    type: object
  controllers.ErrorRateStatistics:
    properties:
      error_rate:
        description: 错误率百分比
        type: number
      error_requests:
        type: integer
      total_requests:
        type: integer
    type: object
  controllers.EventHistoryListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.SSEEvent'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ExecuteSyncTaskRequest:
    properties:
      executed_by:
        example: admin
        type: string
      execution_type:
        description: manual, auto
        example: manual
        type: string
      options:
        allOf:
        - $ref: '#/definitions/thematic_library.SyncExecutionOptions'
        description: 执行选项
    required:
    - executed_by
    type: object
  controllers.ExecutionTrendData:
    properties:
      date:
        type: string
      failure_count:
        type: integer
      success_count:
        type: integer
    type: object
  controllers.FailureReasonStats:
    properties:
      count:
        type: integer
      reason:
        type: string
    type: object
  controllers.HealthResponse:
    properties:
      service:
        example: datahub-service
        type: string
      status:
        example: ok
        type: string
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  controllers.ImportCSVRequest:
    properties:
      csv_content:
        example: |-
          id,name,age
          1,张三,25
          2,李四,30
        type: string
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    required:
    - csv_content
    - interface_id
    type: object
  controllers.ImportCSVResponse:
    properties:
      error_messages:
        items:
          type: string
        type: array
      failed_rows:
        example: 0
        type: integer
      imported_rows:
        example: 100
        type: integer
      message:
        example: CSV导入成功
        type: string
      success:
        example: true
        type: boolean
      total_rows:
        example: 100
        type: integer
    type: object
  controllers.InterfaceTestRequest:
    properties:
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      options:
        additionalProperties: true
        description: 测试选项
        type: object
      parameters:
        additionalProperties: true
        description: 测试参数
        type: object
      test_type:
        description: data_fetch, performance, validation
        example: data_fetch
        type: string
    required:
    - interface_id
    - test_type
    type: object
  controllers.InterfaceTestResponse:
    properties:
      column_count:
        description: 字段数
        example: 8
        type: integer
      data:
        description: 返回数据
      data_types:
        additionalProperties:
          type: string
        description: 字段类型
        type: object
      duration:
        description: 调用耗时（毫秒）
        example: 150
        type: integer
      error:
        description: 错误信息
        example: ""
        type: string
      message:
        example: 接口调用成功
        type: string
      performance:
        additionalProperties: true
        description: 性能指标
        type: object
      row_count:
        description: 数据行数
        example: 25
        type: integer
      success:
        example: true
        type: boolean
      test_type:
        example: data_fetch
        type: string
      validation:
        additionalProperties: true
        description: 数据验证结果
        type: object
      warnings:
        description: 警告信息
        example:
        - 数据量较大，建议分页查询
        items:
          type: string
        type: array
    type: object
  controllers.InterfaceTypeCount:
    properties:
      count:
        type: integer
      interface_type:
        type: string
    type: object
  controllers.IssueSeverityCount:
    properties:
      count:
        type: integer
      severity:
        type: string
    type: object
  controllers.IssueTypeCount:
    properties:
      count:
        type: integer
      issue_type:
        type: string
    type: object
  controllers.LibraryAccessStats:
    properties:
      access_count:
        type: integer
      library_id:
        type: string
      library_name:
        type: string
    type: object
  controllers.LibraryTablesResponse:
    properties:
      library_id:
        type: string
      library_name:
        type: string
      library_type:
        description: basic_library, thematic_library
        type: string
      schema_name:
        type: string
      tables:
        items:
          $ref: '#/definitions/controllers.TableInfo'
        type: array
      total_count:
        type: integer
    type: object
  controllers.LibraryTrendData:
    properties:
      count:
        type: integer
      date:
        type: string
    type: object
  controllers.OperationTypeCount:
    properties:
      count:
        type: integer
      operation_type:
        type: string
    type: object
  controllers.PeakUsageTimeInfo:
    properties:
      avg_operations:
        description: 该时段平均操作数
        type: number
      hour:
        description: 小时 (0-23)
        type: integer
    type: object
  controllers.PrimaryKey:
    properties:
      columns:
        items:
          type: string
        type: array
      id:
        type: string
      name:
        type: string
    type: object
  controllers.QualityTrendData:
    properties:
      avg_score:
        type: number
      date:
        type: string
      issue_count:
        type: integer
    type: object
  controllers.RecentApiUsageLog:
    properties:
      api_path:
        type: string
      created_at:
        type: string
      log_id:
        type: string
      method:
        type: string
      request_ip:
        type: string
      response_time:
        type: integer
      status_code:
        type: integer
    type: object
  controllers.RecentExecutionInfo:
    properties:
      end_time:
        type: string
      error_message:
        type: string
      execution_id:
        type: string
      record_count:
        type: integer
      start_time:
        type: string
      status:
        type: string
      task_id:
        type: string
      task_name:
        type: string
    type: object
  controllers.RecentLibraryInfo:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  controllers.RecentQualityReport:
    properties:
      generated_at:
        type: string
      object_type:
        type: string
      quality_score:
        type: number
      report_id:
        type: string
      report_name:
        type: string
    type: object
  controllers.RecentSystemLog:
    properties:
      log_id:
        type: string
      object_type:
        type: string
      operation_result:
        type: string
      operation_time:
        type: string
      operation_type:
        type: string
      operator_name:
        type: string
    type: object
  controllers.RecentThematicLibraryInfo:
    properties:
      category:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      status:
        type: string
    type: object
  controllers.Relationship:
    properties:
      constraint_name:
        type: string
      id:
        type: string
      source_column_name:
        type: string
      source_table_name:
        type: string
      target_column_name:
        type: string
      target_table_name:
        type: string
    type: object
  controllers.ResponseTimeStatistics:
    properties:
      avg_response_time:
        description: 平均响应时间(ms)
        type: number
      max_response_time:
        description: 最大响应时间(ms)
        type: integer
      min_response_time:
        description: 最小响应时间(ms)
        type: integer
      p50_response_time:
        description: P50响应时间(ms)
        type: number
      p95_response_time:
        description: P95响应时间(ms)
        type: number
      p99_response_time:
        description: P99响应时间(ms)
        type: number
    type: object
  controllers.RuleTypeCount:
    properties:
      count:
        type: integer
      rule_type:
        type: string
    type: object
  controllers.SSEConnectionListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.SSEConnection'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.SendEventRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      event_type:
        example: system_notification
        type: string
      user_name:
        example: admin
        type: string
    type: object
  controllers.SyncExecutionListResponse:
    properties:
      list:
        items: {}
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.SyncTaskCreateRequest:
    properties:
      config:
        additionalProperties: true
        description: 任务级别的全局配置
        type: object
      created_by:
        example: admin
        type: string
      cron_expression:
        example: 0 0 * * *
        type: string
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interface_configs:
        description: 接口级别的配置，可选
        items:
          $ref: '#/definitions/controllers.SyncTaskInterfaceConfig'
        type: array
      interface_id:
        description: 向后兼容字段（已废弃，但保留以支持旧版本API）
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interface_ids:
        example:
        - '["550e8400-e29b-41d4-a716-446655440000"]'
        items:
          type: string
        minItems: 1
        type: array
      interval_seconds:
        example: 3600
        type: integer
      library_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      scheduled_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      task_type:
        example: batch_sync
        type: string
      trigger_type:
        example: manual
        type: string
    required:
    - data_source_id
    - interface_ids
    - library_id
    - task_type
    - trigger_type
    type: object
  controllers.SyncTaskInterfaceConfig:
    properties:
      config:
        additionalProperties: true
        description: 接口级别的特殊配置
        type: object
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    required:
    - interface_id
    type: object
  controllers.SyncTaskListResponse:
    properties:
      list:
        items: {}
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.SyncTaskStats:
    properties:
      avg_execution_time:
        description: 平均执行时间(秒)
        type: number
      completed_tasks:
        description: 已完成
        type: integer
      execution_trend_data:
        description: 执行趋势数据
        items:
          $ref: '#/definitions/controllers.ExecutionTrendData'
        type: array
      failed_tasks:
        description: 失败
        type: integer
      failure_reasons:
        description: 失败原因统计
        items:
          $ref: '#/definitions/controllers.FailureReasonStats'
        type: array
      pending_tasks:
        description: 等待中
        type: integer
      recent_executions:
        description: 最近执行记录
        items:
          $ref: '#/definitions/controllers.RecentExecutionInfo'
        type: array
      running_tasks:
        description: 运行中
        type: integer
      task_type_breakdown:
        description: 任务类型分布
        items:
          $ref: '#/definitions/controllers.TaskTypeCount'
        type: array
      today_executions:
        description: 今日执行次数
        type: integer
      today_success_rate:
        description: 今日成功率
        type: number
      total_data_synced:
        description: 总同步数据量
        type: integer
      total_tasks:
        description: 总任务数
        type: integer
      trigger_type_stats:
        description: 触发类型统计
        items:
          $ref: '#/definitions/controllers.TriggerTypeCount'
        type: array
    type: object
  controllers.SyncTaskUpdateRequest:
    properties:
      config:
        additionalProperties: true
        description: 任务级别的全局配置
        type: object
      cron_expression:
        example: 0 0 * * *
        type: string
      interface_configs:
        description: 更新接口级别的配置
        items:
          $ref: '#/definitions/controllers.SyncTaskInterfaceConfig'
        type: array
      interface_ids:
        description: 更新接口列表
        items:
          type: string
        type: array
      interval_seconds:
        example: 3600
        type: integer
      scheduled_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      status:
        description: draft, active, paused
        example: active
        type: string
      task_type:
        example: batch_sync
        type: string
      trigger_type:
        example: manual
        type: string
      updated_by:
        example: admin
        type: string
    type: object
  controllers.SystemActivityStats:
    properties:
      active_users:
        description: 活跃用户
        type: integer
      operation_type_breakdown:
        description: 操作类型分布
        items:
          $ref: '#/definitions/controllers.OperationTypeCount'
        type: array
      peak_usage_time:
        allOf:
        - $ref: '#/definitions/controllers.PeakUsageTimeInfo'
        description: 高峰使用时段
      recent_system_logs:
        description: 最近系统日志
        items:
          $ref: '#/definitions/controllers.RecentSystemLog'
        type: array
      today_active_users:
        description: 今日活跃
        type: integer
      today_operations:
        description: 今日操作
        type: integer
      total_operations:
        description: 总操作数
        type: integer
      total_users:
        description: 用户总数
        type: integer
      user_activity_trend_data:
        description: 用户活动趋势
        items:
          $ref: '#/definitions/controllers.UserActivityTrendData'
        type: array
    type: object
  controllers.TableInfo:
    properties:
      columns:
        items:
          $ref: '#/definitions/controllers.ColumnInfo'
        type: array
      comment:
        type: string
      id:
        type: integer
      live_rows_estimate:
        type: integer
      name:
        type: string
      primary_keys:
        items:
          $ref: '#/definitions/controllers.PrimaryKey'
        type: array
      relationships:
        items:
          $ref: '#/definitions/controllers.Relationship'
        type: array
      schema:
        type: string
      size:
        type: string
    type: object
  controllers.TaskTypeCount:
    properties:
      count:
        type: integer
      task_type:
        type: string
    type: object
  controllers.ThematicInterfaceListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.ThematicInterface'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ThematicLibraryListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.ThematicLibrary'
        type: array
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  controllers.ThematicLibraryMetadataResponse:
    properties:
      access_levels:
        items:
          $ref: '#/definitions/meta.ThematicLibraryAccessLevel'
        type: array
      categories:
        items:
          $ref: '#/definitions/meta.ThematicLibraryCategory'
        type: array
      domains:
        items:
          $ref: '#/definitions/meta.ThematicLibraryDomain'
        type: array
      interface_statuses:
        items:
          $ref: '#/definitions/meta.ThematicInterfaceStatus'
        type: array
      interface_types:
        items:
          $ref: '#/definitions/meta.ThematicInterfaceType'
        type: array
      library_statuses:
        items:
          $ref: '#/definitions/meta.ThematicLibraryStatus'
        type: array
    type: object
  controllers.ThematicLibraryStats:
    properties:
      access_level_stats:
        description: 访问级别统计
        items:
          $ref: '#/definitions/controllers.AccessLevelCount'
        type: array
      archived_libraries:
        description: 已归档
        type: integer
      category_breakdown:
        description: 分类统计
        items:
          $ref: '#/definitions/controllers.CategoryCount'
        type: array
      domain_breakdown:
        description: 领域统计
        items:
          $ref: '#/definitions/controllers.DomainCount'
        type: array
      draft_libraries:
        description: 草稿
        type: integer
      interface_type_stats:
        description: 接口类型统计
        items:
          $ref: '#/definitions/controllers.InterfaceTypeCount'
        type: array
      published_libraries:
        description: 已发布
        type: integer
      recent_libraries:
        description: 最近创建的主题库
        items:
          $ref: '#/definitions/controllers.RecentThematicLibraryInfo'
        type: array
      table_interfaces:
        description: 表类型接口
        type: integer
      top_access_libraries:
        description: 访问量排行
        items:
          $ref: '#/definitions/controllers.LibraryAccessStats'
        type: array
      total_interfaces:
        description: 接口总数
        type: integer
      total_libraries:
        description: 总数
        type: integer
      trend_data:
        description: 趋势数据
        items:
          $ref: '#/definitions/controllers.LibraryTrendData'
        type: array
      view_interfaces:
        description: 视图类型接口
        type: integer
    type: object
  controllers.TriggerTypeCount:
    properties:
      count:
        type: integer
      trigger_type:
        type: string
    type: object
  controllers.UpdateApiKeyApplicationsRequest:
    properties:
      application_ids:
        description: 关联的应用ID列表
        items:
          type: string
        minItems: 1
        type: array
    required:
    - application_ids
    type: object
  controllers.UpdateBasicLibraryRequest:
    properties:
      description:
        example: 存储用户相关数据的基础库
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name_en:
        example: user_database
        type: string
      name_zh:
        example: 用户数据库
        type: string
      status:
        example: active
        type: string
    required:
    - id
    type: object
  controllers.UpdateDataInterfaceRequest:
    properties:
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440001
        type: string
      description:
        example: 用户数据查询接口
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interface_config:
        additionalProperties: true
        type: object
      name_en:
        example: user_interface
        type: string
      name_zh:
        example: 用户接口
        type: string
      parse_config:
        additionalProperties: true
        type: object
      status:
        example: active
        type: string
      table_fields_config:
        additionalProperties: true
        type: object
      type:
        description: realtime, batch
        example: realtime
        type: string
    required:
    - id
    type: object
  controllers.UpdateDataSourceRequest:
    properties:
      category:
        example: db
        type: string
      connection_config:
        additionalProperties: true
        type: object
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name:
        example: 用户数据源
        type: string
      params_config:
        additionalProperties: true
        type: object
      script:
        type: string
      script_enabled:
        type: boolean
      type:
        example: mysql
        type: string
    required:
    - id
    type: object
  controllers.UpdateInterfaceFieldsRequest:
    properties:
      backup_table:
        description: 是否备份原表
        example: false
        type: boolean
      fields:
        items:
          $ref: '#/definitions/models.TableField'
        type: array
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      update_table:
        description: 是否同时更新数据库表结构
        example: true
        type: boolean
    required:
    - fields
    - interface_id
    type: object
  controllers.UpdateThematicInterfaceFieldsRequest:
    properties:
      fields:
        items:
          $ref: '#/definitions/models.TableField'
        type: array
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    required:
    - fields
    - interface_id
    type: object
  controllers.UpdateThematicInterfaceViewRequest:
    properties:
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      view_sql:
        example: SELECT * FROM users WHERE status = 'active'
        type: string
    required:
    - interface_id
    - view_sql
    type: object
  controllers.UserActivityTrendData:
    properties:
      active_users:
        type: integer
      date:
        type: string
      operations:
        type: integer
    type: object
  governance.CleansingRuleListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.CleansingRuleResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 18
        type: integer
    type: object
  governance.CleansingRuleResponse:
    properties:
      category:
        example: data_format
        type: string
      cleansing_logic:
        type: object
      complexity_level:
        example: medium
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      default_config:
        type: object
      description:
        example: 统一邮箱格式为小写的通用模板
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: false
        type: boolean
      is_enabled:
        example: true
        type: boolean
      name:
        example: 邮箱格式标准化模板
        type: string
      parameters:
        type: object
      rule_type:
        example: standardization
        type: string
      tags:
        type: object
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.CreateCleansingRuleRequest:
    properties:
      category:
        enum:
        - data_format
        - data_quality
        - data_integrity
        example: data_format
        type: string
      cleansing_logic:
        type: object
      complexity_level:
        enum:
        - low
        - medium
        - high
        example: medium
        type: string
      default_config:
        type: object
      description:
        example: 统一邮箱格式为小写的通用模板
        type: string
      is_enabled:
        example: true
        type: boolean
      name:
        example: 邮箱格式标准化模板
        type: string
      parameters:
        type: object
      rule_type:
        enum:
        - standardization
        - deduplication
        - validation
        - transformation
        - enrichment
        example: standardization
        type: string
      tags:
        type: object
    required:
    - category
    - cleansing_logic
    - name
    - rule_type
    type: object
  governance.CreateDataLineageRequest:
    properties:
      column_mapping:
        type: object
      confidence:
        example: 1
        type: number
      description:
        example: 用户表到用户接口的直接映射
        type: string
      is_active:
        example: true
        type: boolean
      relation_type:
        enum:
        - direct
        - derived
        - aggregated
        - transformed
        example: direct
        type: string
      source_object_id:
        example: uuid-123
        type: string
      source_object_type:
        example: table
        type: string
      target_object_id:
        example: uuid-456
        type: string
      target_object_type:
        example: interface
        type: string
      transform_rule:
        type: object
    required:
    - relation_type
    - source_object_id
    - source_object_type
    - target_object_id
    - target_object_type
    type: object
  governance.CreateMaskingRuleRequest:
    properties:
      category:
        enum:
        - personal_info
        - financial
        - medical
        - business
        - custom
        example: personal_info
        type: string
      description:
        example: 对手机号进行脱敏处理的通用模板
        type: string
      is_enabled:
        example: true
        type: boolean
      masking_logic:
        type: object
      masking_type:
        enum:
        - mask
        - replace
        - encrypt
        - pseudonymize
        example: mask
        type: string
      name:
        example: 手机号脱敏模板
        type: string
      parameters:
        type: object
      security_level:
        enum:
        - low
        - medium
        - high
        - critical
        example: high
        type: string
      tags:
        type: object
    required:
    - category
    - masking_logic
    - masking_type
    - name
    type: object
  governance.CreateMetadataRequest:
    properties:
      content:
        type: object
      name:
        example: 用户表元数据
        type: string
      related_object_id:
        example: uuid-123
        type: string
      related_object_type:
        example: interface
        type: string
      type:
        enum:
        - technical
        - business
        - management
        example: technical
        type: string
    required:
    - content
    - name
    - type
    type: object
  governance.CreateQualityRuleRequest:
    properties:
      category:
        enum:
        - basic_quality
        - data_cleansing
        - data_validation
        example: basic_quality
        type: string
      default_config:
        type: object
      description:
        example: 检查数据完整性的通用模板
        type: string
      is_enabled:
        example: true
        type: boolean
      name:
        example: 完整性检查模板
        type: string
      parameters:
        type: object
      rule_logic:
        type: object
      tags:
        type: object
      type:
        enum:
        - completeness
        - accuracy
        - consistency
        - validity
        - uniqueness
        - timeliness
        - standardization
        example: completeness
        type: string
    required:
    - category
    - name
    - rule_logic
    - type
    type: object
  governance.CreateQualityTaskRequest:
    properties:
      description:
        example: 定期检测用户表数据质量
        type: string
      is_enabled:
        example: true
        type: boolean
      name:
        example: 用户表质量检测任务
        type: string
      notification_config:
        type: object
      priority:
        example: 50
        type: integer
      quality_rule_ids:
        example:
        - '["uuid-456"]'
        items:
          type: string
        type: array
      schedule_config:
        type: object
      target_object_id:
        example: uuid-123
        type: string
      target_object_type:
        enum:
        - interface
        - thematic_interface
        - table
        example: interface
        type: string
      task_type:
        enum:
        - scheduled
        - manual
        - realtime
        example: scheduled
        type: string
    required:
    - name
    - target_object_id
    - target_object_type
    - task_type
    type: object
  governance.DataCleansingTemplateListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.DataCleansingTemplateResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 25
        type: integer
    type: object
  governance.DataCleansingTemplateResponse:
    properties:
      applicable_types:
        type: object
      category:
        example: data_format
        type: string
      cleansing_logic:
        type: object
      complexity_level:
        example: medium
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: system
        type: string
      default_config:
        type: object
      description:
        example: 统一邮箱格式为小写
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: true
        type: boolean
      is_enabled:
        example: true
        type: boolean
      name:
        example: 邮箱格式标准化模板
        type: string
      parameters:
        type: object
      rule_type:
        example: standardization
        type: string
      tags:
        type: object
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: system
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.DataLineageEdge:
    properties:
      confidence:
        example: 1
        type: number
      id:
        example: uuid-123
        type: string
      relation_type:
        example: direct
        type: string
      source_id:
        example: uuid-456
        type: string
      target_id:
        example: uuid-789
        type: string
    type: object
  governance.DataLineageGraphResponse:
    properties:
      edges:
        items:
          $ref: '#/definitions/governance.DataLineageEdge'
        type: array
      nodes:
        items:
          $ref: '#/definitions/governance.DataLineageNode'
        type: array
      stats:
        properties:
          max_depth:
            example: 3
            type: integer
          total_edges:
            example: 8
            type: integer
          total_nodes:
            example: 10
            type: integer
        type: object
    type: object
  governance.DataLineageNode:
    properties:
      id:
        example: uuid-123
        type: string
      level:
        example: 0
        type: integer
      name:
        example: users_table
        type: string
      object_type:
        example: table
        type: string
    type: object
  governance.DataLineageResponse:
    properties:
      column_mapping:
        type: object
      confidence:
        example: 1
        type: number
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      description:
        example: 用户表到用户接口的直接映射
        type: string
      id:
        example: uuid-123
        type: string
      is_active:
        example: true
        type: boolean
      relation_type:
        example: direct
        type: string
      source_object_id:
        example: uuid-456
        type: string
      source_object_type:
        example: table
        type: string
      target_object_id:
        example: uuid-789
        type: string
      target_object_type:
        example: interface
        type: string
      transform_rule:
        type: object
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
    type: object
  governance.DataMaskingTemplateListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.DataMaskingTemplateResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 30
        type: integer
    type: object
  governance.DataMaskingTemplateResponse:
    properties:
      applicable_types:
        example:
        - '["string"]'
        items:
          type: string
        type: array
      category:
        example: personal_info
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: system
        type: string
      default_config:
        type: object
      description:
        example: 对手机号进行脱敏处理
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: true
        type: boolean
      is_enabled:
        example: true
        type: boolean
      masking_logic:
        type: object
      masking_type:
        example: mask
        type: string
      name:
        example: 手机号脱敏模板
        type: string
      parameters:
        type: object
      security_level:
        example: high
        type: string
      tags:
        type: object
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: system
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.MaskingRuleListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.MaskingRuleResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 12
        type: integer
    type: object
  governance.MaskingRuleResponse:
    properties:
      category:
        example: personal_info
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      description:
        example: 对手机号进行脱敏处理的通用模板
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: false
        type: boolean
      is_enabled:
        example: true
        type: boolean
      masking_logic:
        type: object
      masking_type:
        example: mask
        type: string
      name:
        example: 手机号脱敏模板
        type: string
      parameters:
        type: object
      security_level:
        example: high
        type: string
      tags:
        type: object
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.MetadataListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.MetadataResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 30
        type: integer
    type: object
  governance.MetadataResponse:
    properties:
      content:
        type: object
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      id:
        example: uuid-123
        type: string
      name:
        example: 用户表元数据
        type: string
      related_object_id:
        example: uuid-456
        type: string
      related_object_type:
        example: interface
        type: string
      type:
        example: technical
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
    type: object
  governance.QualityReportListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.QualityReportResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 8
        type: integer
    type: object
  governance.QualityReportResponse:
    properties:
      generated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      generated_by:
        example: system
        type: string
      id:
        example: uuid-123
        type: string
      issues:
        type: object
      quality_metrics:
        type: object
      quality_score:
        example: 85.5
        type: number
      recommendations:
        type: object
      related_object_id:
        example: uuid-456
        type: string
      related_object_type:
        example: interface
        type: string
      report_name:
        example: 接口质量检查报告
        type: string
    type: object
  governance.QualityRuleListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.QualityRuleResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 25
        type: integer
    type: object
  governance.QualityRuleResponse:
    properties:
      category:
        example: basic_quality
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      default_config:
        type: object
      description:
        example: 检查数据完整性的通用模板
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: false
        type: boolean
      is_enabled:
        example: true
        type: boolean
      name:
        example: 完整性检查模板
        type: string
      parameters:
        type: object
      rule_logic:
        type: object
      tags:
        type: object
      type:
        example: completeness
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.QualityRuleTemplateListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.QualityRuleTemplateResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 50
        type: integer
    type: object
  governance.QualityRuleTemplateResponse:
    properties:
      category:
        example: basic_quality
        type: string
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: system
        type: string
      default_config:
        type: object
      description:
        example: 检查数据完整性的通用模板
        type: string
      id:
        example: uuid-123
        type: string
      is_built_in:
        example: true
        type: boolean
      is_enabled:
        example: true
        type: boolean
      name:
        example: 完整性检查模板
        type: string
      parameters:
        type: object
      rule_logic:
        type: object
      tags:
        type: object
      type:
        example: completeness
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: system
        type: string
      version:
        example: "1.0"
        type: string
    type: object
  governance.QualityTaskExecutionListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.QualityTaskExecutionResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 50
        type: integer
    type: object
  governance.QualityTaskExecutionResponse:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      duration:
        example: 300000
        type: integer
      end_time:
        example: "2024-01-01T00:05:00Z"
        type: string
      error_message:
        type: string
      executed_by:
        example: admin
        type: string
      execution_results:
        type: object
      execution_type:
        example: manual
        type: string
      failed_rules:
        example: 1
        type: integer
      id:
        example: uuid-123
        type: string
      overall_score:
        example: 0.8
        type: number
      passed_rules:
        example: 4
        type: integer
      start_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      status:
        example: completed
        type: string
      task_id:
        example: uuid-456
        type: string
      total_rules_executed:
        example: 5
        type: integer
      trigger_source:
        example: manual
        type: string
      updated_at:
        example: "2024-01-01T00:05:00Z"
        type: string
    type: object
  governance.QualityTaskListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.QualityTaskResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 20
        type: integer
    type: object
  governance.QualityTaskResponse:
    properties:
      created_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      created_by:
        example: admin
        type: string
      description:
        example: 定期检测用户表数据质量
        type: string
      execution_count:
        example: 5
        type: integer
      failure_count:
        example: 1
        type: integer
      id:
        example: uuid-123
        type: string
      is_enabled:
        example: true
        type: boolean
      last_executed:
        example: "2024-01-01T00:00:00Z"
        type: string
      name:
        example: 用户表质量检测任务
        type: string
      next_execution:
        example: "2024-01-02T00:00:00Z"
        type: string
      notification_config:
        type: object
      priority:
        example: 50
        type: integer
      quality_rule_ids:
        example:
        - '["uuid-789"]'
        items:
          type: string
        type: array
      schedule_config:
        type: object
      status:
        example: pending
        type: string
      success_count:
        example: 4
        type: integer
      target_object_id:
        example: uuid-456
        type: string
      target_object_type:
        example: interface
        type: string
      task_type:
        example: scheduled
        type: string
      updated_at:
        example: "2024-01-01T00:00:00Z"
        type: string
      updated_by:
        example: admin
        type: string
    type: object
  governance.RuleTestResult:
    properties:
      error_message:
        type: string
      execution_time:
        example: 50
        type: integer
      field_results:
        type: object
      issues:
        example:
        - '["字段name为空"]'
        items:
          type: string
        type: array
      modifications:
        type: object
      original_data:
        type: object
      processed_data:
        type: object
      quality_score:
        example: 0.85
        type: number
      rule_name:
        example: 完整性检查
        type: string
      rule_template_id:
        example: uuid-123
        type: string
      rule_type:
        example: quality
        type: string
      success:
        example: true
        type: boolean
    type: object
  governance.RunQualityCheckRequest:
    properties:
      object_id:
        example: uuid-123
        type: string
      object_type:
        enum:
        - interface
        - thematic_interface
        example: interface
        type: string
    required:
    - object_id
    - object_type
    type: object
  governance.SystemLogListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/governance.SystemLogResponse'
        type: array
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      total:
        example: 100
        type: integer
    type: object
  governance.SystemLogResponse:
    properties:
      id:
        example: uuid-123
        type: string
      object_id:
        example: uuid-456
        type: string
      object_type:
        example: quality_rule
        type: string
      operation_content:
        type: object
      operation_result:
        example: success
        type: string
      operation_time:
        example: "2024-01-01T00:00:00Z"
        type: string
      operation_type:
        example: create
        type: string
      operator_id:
        example: uuid-789
        type: string
      operator_ip:
        example: 192.168.1.1
        type: string
      operator_name:
        example: admin
        type: string
    type: object
  governance.TestBatchRulesRequest:
    properties:
      cleansing_rules:
        items:
          $ref: '#/definitions/governance.TestCleansingRuleItem'
        type: array
      execution_order:
        example:
        - '["quality"'
        - '"cleansing"'
        - '"masking"]'
        items:
          type: string
        type: array
      masking_rules:
        items:
          $ref: '#/definitions/governance.TestMaskingRuleItem'
        type: array
      quality_rules:
        items:
          $ref: '#/definitions/governance.TestQualityRuleItem'
        type: array
      test_data:
        type: object
    required:
    - test_data
    type: object
  governance.TestCleansingRuleItem:
    properties:
      backup_original:
        example: true
        type: boolean
      cleansing_config:
        type: object
      target_fields:
        example:
        - '["email"]'
        items:
          type: string
        type: array
      template_id:
        example: uuid-123
        type: string
      trigger_condition:
        type: string
    type: object
  governance.TestCleansingRuleRequest:
    properties:
      backup_original:
        example: true
        type: boolean
      cleansing_config:
        type: object
      target_fields:
        example:
        - '["email"'
        - '"address"]'
        items:
          type: string
        type: array
      template_id:
        example: uuid-123
        type: string
      test_data:
        type: object
      trigger_condition:
        example: email != ''
        type: string
    required:
    - target_fields
    - template_id
    - test_data
    type: object
  governance.TestMaskingRuleItem:
    properties:
      masking_config:
        type: object
      preserve_format:
        example: true
        type: boolean
      target_fields:
        example:
        - '["phone"]'
        items:
          type: string
        type: array
      template_id:
        example: uuid-123
        type: string
    type: object
  governance.TestMaskingRuleRequest:
    properties:
      masking_config:
        type: object
      preserve_format:
        example: true
        type: boolean
      target_fields:
        example:
        - '["phone"'
        - '"id_card"]'
        items:
          type: string
        type: array
      template_id:
        example: uuid-123
        type: string
      test_data:
        type: object
    required:
    - target_fields
    - template_id
    - test_data
    type: object
  governance.TestQualityRuleItem:
    properties:
      rule_template_id:
        example: uuid-123
        type: string
      runtime_config:
        type: object
      target_fields:
        example:
        - '["name"]'
        items:
          type: string
        type: array
      threshold:
        type: object
    type: object
  governance.TestQualityRuleRequest:
    properties:
      rule_template_id:
        example: uuid-123
        type: string
      runtime_config:
        type: object
      target_fields:
        example:
        - '["name"'
        - '"email"]'
        items:
          type: string
        type: array
      test_data:
        type: object
      threshold:
        type: object
    required:
    - rule_template_id
    - target_fields
    - test_data
    type: object
  governance.TestRulePreviewRequest:
    properties:
      configuration:
        type: object
      rule_type:
        enum:
        - quality
        - masking
        - cleansing
        example: quality
        type: string
      sample_data:
        type: object
      target_fields:
        example:
        - '["name"]'
        items:
          type: string
        type: array
      template_id:
        example: uuid-123
        type: string
    required:
    - rule_type
    - sample_data
    - target_fields
    - template_id
    type: object
  governance.TestRulePreviewResponse:
    properties:
      config_validation:
        properties:
          is_valid:
            example: true
            type: boolean
          issues:
            example:
            - '["阈值配置缺失"]'
            items:
              type: string
            type: array
        type: object
      estimated_impact:
        properties:
          affected_fields:
            example: 2
            type: integer
          confidence:
            example: 0.9
            type: number
          risk_level:
            enum:
            - low
            - medium
            - high
            example: low
            type: string
        type: object
      expected_changes:
        example:
        - '["字段name将被检查是否为空"]'
        items:
          type: string
        type: array
      original_data:
        type: object
      preview_result:
        type: object
      rule_name:
        example: 完整性检查
        type: string
      rule_type:
        example: quality
        type: string
    type: object
  governance.TestRuleResponse:
    properties:
      execution_time:
        example: 150
        type: integer
      failed_rules:
        example: 1
        type: integer
      overall_success:
        example: false
        type: boolean
      recommendations:
        example:
        - '["建议调整完整性检查阈值"]'
        items:
          type: string
        type: array
      results:
        items:
          $ref: '#/definitions/governance.RuleTestResult'
        type: array
      successful_rules:
        example: 2
        type: integer
      summary:
        properties:
          cleansing_rules:
            example: 1
            type: integer
          masking_rules:
            example: 1
            type: integer
          overall_score:
            example: 0.75
            type: number
          quality_checks:
            example: 1
            type: integer
        type: object
      test_id:
        example: uuid-test-123
        type: string
      total_rules:
        example: 3
        type: integer
    type: object
  governance.UpdateCleansingRuleRequest:
    properties:
      cleansing_logic:
        type: object
      default_config:
        type: object
      description:
        example: 更新后的描述
        type: string
      is_enabled:
        example: false
        type: boolean
      name:
        example: 更新后的清洗规则模板
        type: string
      parameters:
        type: object
      tags:
        type: object
    type: object
  governance.UpdateMaskingRuleRequest:
    properties:
      description:
        example: 更新后的描述
        type: string
      is_enabled:
        example: false
        type: boolean
      masking_logic:
        type: object
      name:
        example: 更新后的脱敏规则模板
        type: string
      parameters:
        type: object
      tags:
        type: object
    type: object
  governance.UpdateMetadataRequest:
    properties:
      content:
        type: object
      description:
        example: 更新后的描述
        type: string
      name:
        example: 更新后的元数据
        type: string
    type: object
  governance.UpdateQualityRuleRequest:
    properties:
      default_config:
        type: object
      description:
        example: 更新后的描述
        type: string
      is_enabled:
        example: false
        type: boolean
      name:
        example: 更新后的质量规则模板
        type: string
      parameters:
        type: object
      rule_logic:
        type: object
      tags:
        type: object
    type: object
  governance.UpdateQualityTaskRequest:
    properties:
      description:
        example: 更新后的描述
        type: string
      is_enabled:
        example: false
        type: boolean
      name:
        example: 更新后的质量检测任务
        type: string
      notification_config:
        type: object
      priority:
        example: 80
        type: integer
      quality_rule_ids:
        example:
        - '["uuid-789"]'
        items:
          type: string
        type: array
      schedule_config:
        type: object
    type: object
  meta.CleansingRuleType:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.DataGovernanceObjectType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.DataInterfaceConfigDefinition:
    properties:
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      meta_config:
        description: 连接配置字段
        items:
          $ref: '#/definitions/meta.DataInterfaceConfigField'
        type: array
      name:
        type: string
      type:
        description: database, messaging, api, file
        type: string
    type: object
  meta.DataInterfaceConfigField:
    properties:
      default_value: {}
      dependencies:
        description: 依赖关系配置
        items:
          $ref: '#/definitions/meta.FieldDependency'
        type: array
      description:
        type: string
      display_name:
        type: string
      group:
        description: 字段分组
        type: string
      help_text:
        description: 帮助文本
        type: string
      map_variable:
        additionalProperties:
          $ref: '#/definitions/meta.DataInterfaceConfigVariable'
        description: 变量
        type: object
      max:
        description: 用于number类型
        type: number
      min:
        description: 用于number类型
        type: number
      name:
        type: string
      options:
        description: 用于select类型
        items:
          type: string
        type: array
      pattern:
        description: 用于string类型的正则验证
        type: string
      placeholder:
        description: 前端显示的占位符
        type: string
      required:
        type: boolean
      type:
        description: string,text, number, boolean, array, map, enum,map_variable
        type: string
    type: object
  meta.DataInterfaceConfigVariable:
    properties:
      auto_increment:
        type: boolean
      db_field:
        description: db_field 类型时，字段名
        type: string
      db_table:
        description: db_field 类型时，表名
        type: string
      description:
        type: string
      increment_step:
        description: number 类型时，步长, timestamp 类型时，格式为 "1s", "1m", "1h", "1d"
        type: string
      init_value:
        type: string
      name:
        type: string
      type:
        description: number,timestamp,db_field
        type: string
    type: object
  meta.DataMaskingType:
    properties:
      code:
        type: string
      description:
        type: string
      example:
        type: string
      name:
        type: string
    type: object
  meta.DataSourceConfigField:
    properties:
      default_value: {}
      dependencies:
        description: 依赖关系配置
        items:
          $ref: '#/definitions/meta.DataSourceFieldDependency'
        type: array
      description:
        type: string
      display_name:
        type: string
      group:
        description: 字段分组
        type: string
      help_text:
        description: 帮助文本
        type: string
      max:
        description: 用于number类型
        type: number
      min:
        description: 用于number类型
        type: number
      name:
        type: string
      options:
        description: 用于select类型
        items:
          type: string
        type: array
      pattern:
        description: 用于string类型的正则验证
        type: string
      placeholder:
        description: 前端显示的占位符
        type: string
      required:
        type: boolean
      type:
        description: string, number, boolean, array, object, enum
        type: string
    type: object
  meta.DataSourceExample:
    properties:
      connection_config:
        additionalProperties: true
        type: object
      description:
        type: string
      name:
        type: string
      params_config:
        additionalProperties: true
        type: object
    type: object
  meta.DataSourceFieldDependency:
    properties:
      action:
        description: 动作：show, hide, enable, disable, require, optional
        type: string
      condition:
        description: 条件：equals, not_equals, in, not_in, greater_than, less_than, contains,
          not_contains
        type: string
      field:
        description: 依赖的字段名
        type: string
      value:
        description: 条件值
    type: object
  meta.DataSourceTypeDefinition:
    properties:
      category:
        type: string
      description:
        type: string
      documentation:
        type: string
      examples:
        items:
          $ref: '#/definitions/meta.DataSourceExample'
        type: array
      icon:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      meta_config:
        description: 连接配置字段
        items:
          $ref: '#/definitions/meta.DataSourceConfigField'
        type: array
      name:
        type: string
      params_config:
        description: 参数配置字段
        items:
          $ref: '#/definitions/meta.DataSourceConfigField'
        type: array
      supported_features:
        items:
          type: string
        type: array
      type:
        description: database, messaging, api, file
        type: string
      validation_rules:
        items:
          $ref: '#/definitions/meta.DataSourceValidationRule'
        type: array
    type: object
  meta.DataSourceValidationRule:
    properties:
      condition:
        additionalProperties: true
        type: object
      field:
        type: string
      level:
        description: error, warning
        type: string
      message:
        type: string
      name:
        type: string
      type:
        description: required, format, range, custom
        type: string
    type: object
  meta.FieldDependency:
    properties:
      action:
        description: 动作：show, hide, enable, disable, require, optional
        type: string
      condition:
        description: 条件：equals, not_equals, in, not_in, greater_than, less_than, contains,
          not_contains
        type: string
      field:
        description: 依赖的字段名
        type: string
      value:
        description: 条件值
    type: object
  meta.LineageRelationType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.MetadataType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.MonitorQueryRequest:
    properties:
      end_time:
        description: Unix 时间戳（秒），可选
        type: integer
      limit:
        description: 限制结果数量，主要用于日志查询
        type: integer
      query:
        description: PromQL 或 LogQL 查询语句
        type: string
      query_type:
        description: metrics 或 logs
        type: string
      start_time:
        description: Unix 时间戳（秒），可选
        type: integer
      step:
        description: 步长（秒），仅用于区间查询
        type: integer
    type: object
  meta.QualityCheckStatus:
    properties:
      code:
        type: string
      color:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.QualityIssueSeverity:
    properties:
      code:
        type: string
      color:
        type: string
      description:
        type: string
      name:
        type: string
      priority:
        type: integer
    type: object
  meta.QualityIssueStatus:
    properties:
      code:
        type: string
      color:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.QualityMetricType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
      unit:
        type: string
    type: object
  meta.QualityReportType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.QualityRuleType:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.TaskStatus:
    properties:
      code:
        type: string
      color:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.TaskType:
    properties:
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.ThematicInterfaceStatus:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicInterfaceType:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryAccessLevel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryCategory:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryDomain:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryStatus:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicSyncConfigDefinition:
    properties:
      category:
        description: aggregation, key_matching, cleansing, privacy, quality
        type: string
      description:
        type: string
      fields:
        items:
          $ref: '#/definitions/meta.ThematicSyncConfigField'
        type: array
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicSyncConfigField:
    properties:
      default_value: {}
      dependencies:
        description: 字段依赖关系
        items:
          $ref: '#/definitions/meta.FieldDependency'
        type: array
      description:
        type: string
      display_name:
        type: string
      group:
        description: 字段分组
        type: string
      help_text:
        description: 帮助文本
        type: string
      max:
        description: 用于number类型
        type: number
      min:
        description: 用于number类型
        type: number
      name:
        type: string
      options:
        description: 用于enum类型
        items:
          type: string
        type: array
      pattern:
        description: 用于string类型的正则验证
        type: string
      placeholder:
        description: 前端显示的占位符
        type: string
      required:
        type: boolean
      type:
        description: string, number, boolean, array, object, enum
        type: string
    type: object
  meta.TransformationRuleType:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  meta.ValidationRuleType:
    properties:
      category:
        type: string
      code:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  models.ApiApplication:
    properties:
      api_interfaces:
        items:
          $ref: '#/definitions/models.ApiInterface'
        type: array
      api_keys:
        items:
          $ref: '#/definitions/models.ApiKey'
        type: array
      contact_person:
        type: string
      contact_phone:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      path:
        description: 应用访问路径，例如 "user-center"
        type: string
      status:
        description: active/inactive
        type: string
      thematic_library:
        allOf:
        - $ref: '#/definitions/models.ThematicLibrary'
        description: 关联关系
      thematic_library_id:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.ApiInterface:
    properties:
      api_application:
        $ref: '#/definitions/models.ApiApplication'
      api_application_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      path:
        description: 对外暴露的路径，例如 "users"
        type: string
      status:
        description: active, inactive
        type: string
      thematic_interface:
        $ref: '#/definitions/models.ThematicInterface'
      thematic_interface_id:
        type: string
    type: object
  models.ApiKey:
    properties:
      applications:
        description: 多对多关系：一个ApiKey可以访问多个ApiApplication
        items:
          $ref: '#/definitions/models.ApiApplication'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      expires_at:
        type: string
      id:
        type: string
      key_prefix:
        description: Key的前缀，用于快速识别
        type: string
      last_used_at:
        type: string
      name:
        description: ApiKey名称
        type: string
      status:
        description: active, inactive, revoked
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      usage_count:
        type: integer
    type: object
  models.ApiRateLimit:
    properties:
      api_path:
        type: string
      application:
        $ref: '#/definitions/models.ApiApplication'
      application_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_enabled:
        type: boolean
      max_requests:
        description: 最大请求数
        type: integer
      time_window:
        description: 时间窗口，单位秒
        type: integer
    type: object
  models.ApiUsageLog:
    properties:
      api_path:
        type: string
      application:
        $ref: '#/definitions/models.ApiApplication'
      application_id:
        type: string
      created_by:
        type: string
      error_message:
        type: string
      id:
        type: string
      method:
        type: string
      request_ip:
        type: string
      request_size:
        type: integer
      request_time:
        type: string
      response_size:
        type: integer
      response_time:
        description: 响应时间，毫秒
        type: integer
      status_code:
        type: integer
      user_agent:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  models.BasicLibrary:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      data_sources:
        items:
          $ref: '#/definitions/models.DataSource'
        type: array
      description:
        example: 存储用户基础信息的数据库
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interfaces:
        description: 关联关系
        items:
          $ref: '#/definitions/models.DataInterface'
        type: array
      name_en:
        example: user_basic_library
        type: string
      name_zh:
        example: 用户数据基础库
        type: string
      status:
        example: active
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.CleansingRule:
    properties:
      config:
        additionalProperties: true
        type: object
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      interface_id:
        type: string
      is_enabled:
        type: boolean
      order_num:
        type: integer
      type:
        type: string
    type: object
  models.DataAccessRequest:
    properties:
      access_permission:
        description: read/write
        type: string
      approval_comment:
        type: string
      approved_at:
        type: string
      approver_id:
        type: string
      approver_name:
        type: string
      created_by:
        type: string
      id:
        type: string
      request_reason:
        type: string
      requested_at:
        type: string
      requester_id:
        type: string
      requester_name:
        type: string
      resource_id:
        type: string
      resource_type:
        description: thematic_library/basic_library/interface
        type: string
      status:
        description: pending/approved/rejected/expired
        type: string
      valid_until:
        type: string
    type: object
  models.DataCleansingConfig:
    properties:
      backup_original:
        description: 是否备份原始数据
        type: boolean
      cleansing_config:
        additionalProperties: true
        description: 运行时清洗配置
        type: object
      error_handling:
        additionalProperties: true
        description: 错误处理策略
        type: object
      is_enabled:
        type: boolean
      post_condition:
        description: 后置条件
        type: string
      pre_condition:
        description: 前置条件
        type: string
      target_fields:
        description: 目标字段列表
        items:
          type: string
        type: array
      template_id:
        type: string
      trigger_condition:
        description: 触发条件
        type: string
      validation_rules:
        additionalProperties: true
        description: 验证规则
        type: object
    type: object
  models.DataInterface:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 关联关系
      clean_rules:
        items:
          $ref: '#/definitions/models.CleansingRule'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      data_source:
        $ref: '#/definitions/models.DataSource'
      data_source_id:
        type: string
      description:
        type: string
      fields:
        items:
          $ref: '#/definitions/models.InterfaceField'
        type: array
      id:
        type: string
      interface_config:
        $ref: '#/definitions/models.JSONB'
      is_table_created:
        type: boolean
      library_id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      parse_config:
        $ref: '#/definitions/models.JSONB'
      status:
        type: string
      table_fields_config:
        $ref: '#/definitions/models.JSONB'
      type:
        description: realtime, batch
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataMaskingConfig:
    properties:
      apply_condition:
        description: 应用条件
        type: string
      is_enabled:
        type: boolean
      masking_config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 运行时脱敏配置
      preserve_format:
        description: 是否保持格式
        type: boolean
      reversible_config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 可逆配置（如果支持）
      target_fields:
        description: 目标字段列表
        items:
          type: string
        type: array
      template_id:
        type: string
    type: object
  models.DataSource:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 关联关系
      category:
        description: stream, http, db, file
        type: string
      connection_config:
        $ref: '#/definitions/models.JSONB'
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      library_id:
        type: string
      name:
        type: string
      params_config:
        $ref: '#/definitions/models.JSONB'
      script:
        description: 动态执行脚本，用于特殊认证处理
        type: string
      script_enabled:
        description: 是否启用脚本执行
        type: boolean
      status:
        description: active, inactive
        type: string
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataSubscription:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      filter_condition:
        additionalProperties: true
        type: object
      id:
        type: string
      notification_config:
        additionalProperties: true
        type: object
      notification_method:
        description: webhook/message_queue/email
        type: string
      resource_id:
        type: string
      resource_type:
        description: thematic_interface/basic_interface
        type: string
      status:
        description: active/paused/terminated
        type: string
      subscriber_id:
        type: string
      subscriber_type:
        description: user/application
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.InterfaceField:
    properties:
      check_constraint:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      data_type:
        type: string
      default_value:
        type: string
      description:
        type: string
      id:
        type: string
      interface_id:
        type: string
      is_increment_field:
        description: 是否为增量字段，增量更新时根据这个字段判断条件
        type: boolean
      is_nullable:
        type: boolean
      is_primary_key:
        type: boolean
      is_unique:
        type: boolean
      name_en:
        type: string
      name_zh:
        type: string
      order_num:
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.JSONB:
    additionalProperties: true
    type: object
  models.QualityRuleConfig:
    properties:
      is_enabled:
        type: boolean
      rule_template_id:
        type: string
      runtime_config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 运行时配置
      target_fields:
        description: 目标字段列表
        items:
          type: string
        type: array
      threshold:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 阈值配置
    type: object
  models.SSEConnection:
    properties:
      client_ip:
        type: string
      connected_at:
        type: string
      connection_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      last_ping_at:
        type: string
      user_agent:
        type: string
      user_name:
        type: string
    type: object
  models.SSEEvent:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      data:
        additionalProperties: true
        type: object
      event_type:
        description: data_change, system_notification, user_message等
        type: string
      id:
        type: string
      read:
        type: boolean
      read_at:
        type: string
      read_by:
        type: string
      sent:
        type: boolean
      sent_at:
        type: string
      sent_by:
        type: string
      user_name:
        type: string
    type: object
  models.SyncInterfaceResult:
    properties:
      details:
        additionalProperties: true
        type: object
      duration:
        description: 持续时间，单位：毫秒
        type: integer
      end_time:
        type: string
      error_message:
        type: string
      processed_rows:
        type: integer
      start_time:
        type: string
      success:
        type: boolean
    type: object
  models.SyncProgress:
    properties:
      current_phase:
        type: string
      error_count:
        type: integer
      estimated_time:
        type: string
      processed_rows:
        type: integer
      progress_percent:
        type: integer
      speed:
        description: 每秒处理行数
        type: integer
      total_rows:
        type: integer
      updated_at:
        type: string
    type: object
  models.SyncResult:
    properties:
      details:
        additionalProperties: true
        type: object
      duration_ms:
        description: 毫秒数，便于JSON序列化
        type: integer
      end_time:
        type: string
      error_count:
        type: integer
      error_message:
        type: string
      error_rows:
        type: integer
      interfaces:
        additionalProperties:
          $ref: '#/definitions/models.SyncInterfaceResult'
        description: 各接口的处理结果
        type: object
      metadata:
        additionalProperties: true
        type: object
      processed_rows:
        type: integer
      start_time:
        type: string
      statistics:
        additionalProperties: true
        type: object
      status:
        type: string
      success:
        description: 向后兼容字段
        type: boolean
      success_rows:
        type: integer
      task_id:
        type: string
    type: object
  models.SyncTask:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 动态关联 - 这些字段不存储在数据库中，在运行时根据LibraryType动态加载
      config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 配置和结果
      created_at:
        description: 基础字段
        type: string
      created_by:
        example: system
        type: string
      cron_expression:
        description: Cron表达式
        example: 0 0 * * *
        type: string
      data_interfaces:
        items:
          $ref: '#/definitions/models.DataInterface'
        type: array
      data_source:
        $ref: '#/definitions/models.DataSource'
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      end_time:
        type: string
      error_count:
        example: 0
        type: integer
      error_message:
        type: string
      execution_status:
        description: idle, running, success, failed (任务执行状态)
        example: idle
        type: string
      executions:
        description: 执行记录关联
        items:
          $ref: '#/definitions/models.SyncTaskExecution'
        type: array
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interval_seconds:
        description: 间隔秒数
        example: 3600
        type: integer
      last_run_time:
        description: 上次执行时间
        type: string
      library_id:
        description: 基础库ID或主题库ID
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      library_type:
        description: basic_library, thematic_library
        example: basic_library
        type: string
      next_run_time:
        description: 下次执行时间
        type: string
      processed_rows:
        example: 0
        type: integer
      progress:
        description: 进度百分比 0-100
        example: 0
        type: integer
      result:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 同步结果
      scheduled_time:
        description: 计划执行时间
        type: string
      start_time:
        description: 执行状态相关字段
        type: string
      status:
        description: draft, active, paused (任务生命周期状态)
        example: draft
        type: string
      task_interfaces:
        description: 多接口关联
        items:
          $ref: '#/definitions/models.SyncTaskInterface'
        type: array
      task_type:
        description: batch_sync, realtime_sync
        example: batch_sync
        type: string
      thematic_library:
        $ref: '#/definitions/models.ThematicLibrary'
      total_rows:
        example: 0
        type: integer
      trigger_type:
        description: 执行时机相关字段
        example: manual
        type: string
      updated_at:
        type: string
      updated_by:
        example: system
        type: string
    type: object
  models.SyncTaskExecution:
    properties:
      created_at:
        type: string
      duration:
        description: 执行时长，毫秒
        type: integer
      end_time:
        type: string
      error_count:
        type: integer
      error_message:
        type: string
      execution_type:
        description: manual, scheduled, retry
        example: manual
        type: string
      id:
        type: string
      processed_rows:
        type: integer
      progress:
        description: 进度百分比 0-100
        type: integer
      result:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 执行结果详情
      start_time:
        type: string
      status:
        description: running, success, failed, cancelled
        example: running
        type: string
      task:
        allOf:
        - $ref: '#/definitions/models.SyncTask'
        description: 关联关系
      task_id:
        type: string
      total_rows:
        type: integer
      updated_at:
        type: string
    type: object
  models.SyncTaskInterface:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 接口级别的配置
      created_at:
        type: string
      data_interface:
        $ref: '#/definitions/models.DataInterface'
      end_time:
        type: string
      error_count:
        example: 0
        type: integer
      error_message:
        type: string
      id:
        type: string
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      processed_rows:
        example: 0
        type: integer
      progress:
        description: 进度百分比 0-100
        example: 0
        type: integer
      result:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 接口级别的结果
      start_time:
        type: string
      status:
        description: pending, running, success, failed, cancelled
        example: pending
        type: string
      sync_task:
        allOf:
        - $ref: '#/definitions/models.SyncTask'
        description: 关联关系
      task_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      total_rows:
        example: 0
        type: integer
      updated_at:
        type: string
    type: object
  models.TableField:
    properties:
      check_constraint:
        type: string
      data_type:
        type: string
      default_value:
        type: string
      description:
        type: string
      is_increment_field:
        description: 是否为增量字段，增量更新时根据这个字段判断条件
        type: boolean
      is_nullable:
        type: boolean
      is_primary_key:
        type: boolean
      is_unique:
        type: boolean
      name_en:
        type: string
      name_zh:
        type: string
      order_num:
        type: integer
    type: object
  models.TableSchemaRequest:
    properties:
      fields:
        items:
          $ref: '#/definitions/models.TableField'
        type: array
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      operation:
        description: create_table, alter_table, drop_table
        example: create_table
        type: string
      schema_name:
        example: user_basic_library
        type: string
      table_name:
        example: users
        type: string
    required:
    - interface_id
    - operation
    - schema_name
    - table_name
    type: object
  models.ThematicInterface:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      interface_config:
        $ref: '#/definitions/models.JSONB'
      is_table_created:
        type: boolean
      is_view_created:
        type: boolean
      library_id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      parse_config:
        $ref: '#/definitions/models.JSONB'
      status:
        type: string
      table_fields_config:
        $ref: '#/definitions/models.JSONB'
      thematic_library:
        allOf:
        - $ref: '#/definitions/models.ThematicLibrary'
        description: 关联关系
      type:
        description: realtime, batch, view
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      view_config:
        $ref: '#/definitions/models.JSONB'
      view_sql:
        type: string
    type: object
  models.ThematicLibrary:
    properties:
      access_level:
        description: public, internal, private
        type: string
      authorized_roles:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      authorized_users:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      category:
        description: business, technical, analysis, report
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      domain:
        description: user, order, product, finance, marketing
        type: string
      id:
        type: string
      interfaces:
        description: 关联关系
        items:
          $ref: '#/definitions/models.ThematicInterface'
        type: array
      name_en:
        type: string
      name_zh:
        type: string
      publish_status:
        description: draft, published, archived
        type: string
      retention_period:
        type: integer
      source_libraries:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      status:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      update_frequency:
        description: realtime, hourly, daily, weekly, monthly
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      version:
        type: string
    type: object
  thematic_library.ConditionalRule:
    properties:
      condition:
        type: string
      transform:
        type: string
      value: {}
    required:
    - condition
    type: object
  thematic_library.ConversionRule:
    properties:
      from_type:
        type: string
      rule:
        type: string
      to_type:
        type: string
    required:
    - from_type
    - rule
    - to_type
    type: object
  thematic_library.CreateThematicSyncTaskRequest:
    properties:
      cleansing_rule_configs:
        items:
          $ref: '#/definitions/models.DataCleansingConfig'
        type: array
      created_by:
        type: string
      description:
        type: string
      field_mapping_rules:
        $ref: '#/definitions/thematic_library.FieldMappingRules'
      governance_config:
        $ref: '#/definitions/thematic_library.GovernanceExecutionConfig'
      key_matching_rules:
        allOf:
        - $ref: '#/definitions/thematic_library.KeyMatchingRules'
        description: 规则配置
      masking_rule_configs:
        items:
          $ref: '#/definitions/models.DataMaskingConfig'
        type: array
      quality_rule_configs:
        description: 数据治理规则配置
        items:
          $ref: '#/definitions/models.QualityRuleConfig'
        type: array
      schedule_config:
        $ref: '#/definitions/thematic_library.ScheduleConfig'
      source_libraries:
        description: |-
          数据源配置 - 两种模式二选一
          模式1: 接口模式 - 从基础库的数据接口获取数据
        items:
          $ref: '#/definitions/thematic_library.SourceLibraryConfig'
        type: array
      sql_queries:
        description: '模式2: SQL模式 - 直接执行SQL查询获取数据（优先级更高）'
        items:
          $ref: '#/definitions/thematic_library.SQLQueryConfig'
        type: array
      task_name:
        type: string
      thematic_interface_id:
        type: string
      thematic_library_id:
        type: string
    required:
    - created_by
    - schedule_config
    - task_name
    - thematic_interface_id
    - thematic_library_id
    type: object
  thematic_library.DataFilterRule:
    properties:
      field:
        type: string
      logic_op:
        default: AND
        enum:
        - AND
        - OR
        type: string
      operator:
        enum:
        - eq
        - ne
        - gt
        - lt
        - ge
        - le
        - in
        - nin
        - like
        type: string
      value: {}
    required:
    - field
    - operator
    - value
    type: object
  thematic_library.ExecutionDataRange:
    properties:
      conditions:
        items:
          type: string
        type: array
      date_field:
        type: string
      end_time:
        type: string
      partition_key:
        type: string
      start_time:
        type: string
    type: object
  thematic_library.ExecutionFilter:
    properties:
      field:
        type: string
      logic_op:
        default: AND
        enum:
        - AND
        - OR
        type: string
      operator:
        enum:
        - eq
        - ne
        - gt
        - lt
        - ge
        - le
        - in
        - nin
        - like
        type: string
      value: {}
    required:
    - field
    - operator
    - value
    type: object
  thematic_library.ExecutionOutput:
    properties:
      detailed_log:
        default: false
        type: boolean
      exclude_fields:
        items:
          type: string
        type: array
      export_format:
        default: json
        type: string
      export_path:
        type: string
      export_results:
        default: false
        type: boolean
      include_fields:
        items:
          type: string
        type: array
      log_level:
        default: INFO
        type: string
      progress_report:
        default: true
        type: boolean
      report_interval:
        default: 1000
        type: integer
      save_metrics:
        default: true
        type: boolean
    type: object
  thematic_library.ExecutionWindow:
    properties:
      days:
        items:
          type: integer
        type: array
      end_time:
        example: "18:00"
        type: string
      holidays:
        default: false
        type: boolean
      start_time:
        example: "09:00"
        type: string
    type: object
  thematic_library.FieldMapping:
    properties:
      default_value: {}
      required:
        default: false
        type: boolean
      source_field:
        type: string
      target_field:
        type: string
      transform:
        type: string
    required:
    - source_field
    - target_field
    type: object
  thematic_library.FieldMappingRule:
    properties:
      data_type:
        type: string
      default_value: {}
      nullable:
        default: true
        type: boolean
      required:
        default: false
        type: boolean
      source_field:
        type: string
      target_field:
        type: string
      transform:
        $ref: '#/definitions/thematic_library.FieldTransform'
      validation:
        $ref: '#/definitions/thematic_library.FieldValidationRule'
    required:
    - source_field
    - target_field
    type: object
  thematic_library.FieldMappingRules:
    properties:
      case_sensitive:
        default: true
        type: boolean
      default_policy:
        default: ignore
        type: string
      mappings:
        items:
          $ref: '#/definitions/thematic_library.FieldMappingRule'
        minItems: 1
        type: array
      type_conversion:
        $ref: '#/definitions/thematic_library.TypeConversionConfig'
      validation:
        $ref: '#/definitions/thematic_library.MappingValidation'
    required:
    - mappings
    type: object
  thematic_library.FieldTransform:
    properties:
      conditional:
        items:
          $ref: '#/definitions/thematic_library.ConditionalRule'
        type: array
      expression:
        type: string
      parameters:
        additionalProperties:
          type: string
        type: object
      type:
        type: string
    required:
    - type
    type: object
  thematic_library.FieldValidationRule:
    properties:
      allowed_values:
        items: {}
        type: array
      custom_rules:
        items:
          type: string
        type: array
      max_length:
        type: integer
      max_value: {}
      min_length:
        type: integer
      min_value: {}
      pattern:
        type: string
    type: object
  thematic_library.FuzzyMatchConfig:
    properties:
      algorithm:
        default: levenshtein
        type: string
      case_ignore:
        default: true
        type: boolean
      enabled:
        default: false
        type: boolean
      fields:
        items:
          type: string
        type: array
      preprocessing:
        items:
          $ref: '#/definitions/thematic_library.PreprocessRule'
        type: array
      threshold:
        default: 0.8
        type: number
    type: object
  thematic_library.GovernanceExecutionConfig:
    properties:
      batch_size:
        type: integer
      custom_config:
        additionalProperties: true
        type: object
      enable_cleansing:
        type: boolean
      enable_masking:
        type: boolean
      enable_quality_check:
        type: boolean
      max_retries:
        type: integer
      quality_threshold:
        type: number
      stop_on_quality_failure:
        type: boolean
      timeout_seconds:
        type: integer
    type: object
  thematic_library.IncrementalConfig:
    properties:
      batch_size:
        default: 1000
        description: 增量同步批次大小
        type: integer
      check_deleted_field:
        description: 软删除字段名称
        type: string
      compare_operator:
        default: '>'
        description: 比较操作符
        type: string
      deleted_value:
        description: 删除标记值
        type: string
      enabled:
        description: 是否启用增量同步
        type: boolean
      field_type:
        description: 字段类型：timestamp, number, string
        type: string
      incremental_field:
        description: 增量字段名称
        type: string
      initial_value:
        description: 初始值
        type: string
      last_sync_value:
        description: 上次同步的值
        type: string
      max_lookback_hours:
        description: 最大回溯小时数
        type: integer
      sync_deleted_records:
        description: 是否同步已删除的记录
        type: boolean
      timestamp_format:
        description: 时间戳格式
        type: string
      timezone:
        default: Asia/Shanghai
        description: 时区
        type: string
    type: object
  thematic_library.KeyMatchingRules:
    properties:
      case_sensitive:
        default: true
        type: boolean
      conflict_policy:
        enum:
        - first
        - last
        - merge
        - error
        type: string
      fuzzy_matching:
        $ref: '#/definitions/thematic_library.FuzzyMatchConfig'
      match_threshold:
        default: 0.8
        type: number
      primary_keys:
        items:
          $ref: '#/definitions/thematic_library.PrimaryKeyRule'
        minItems: 1
        type: array
    required:
    - conflict_policy
    - primary_keys
    type: object
  thematic_library.KeyTransform:
    properties:
      parameters:
        additionalProperties:
          type: string
        type: object
      type:
        enum:
        - trim
        - upper
        - lower
        - hash
        - normalize
        type: string
    required:
    - type
    type: object
  thematic_library.KeyValidation:
    properties:
      allow_empty:
        default: false
        type: boolean
      max_length:
        type: integer
      min_length:
        type: integer
      pattern:
        type: string
      required:
        default: true
        type: boolean
    type: object
  thematic_library.MappingValidation:
    properties:
      allow_unmapped:
        default: true
        type: boolean
      check_duplicates:
        default: true
        type: boolean
      required_fields:
        items:
          type: string
        type: array
      validate_types:
        default: true
        type: boolean
    type: object
  thematic_library.PreprocessRule:
    properties:
      parameters:
        type: string
      type:
        enum:
        - trim
        - normalize
        - remove_special
        type: string
    required:
    - type
    type: object
  thematic_library.PrimaryKeyRule:
    properties:
      fields:
        items:
          type: string
        minItems: 1
        type: array
      transform:
        items:
          $ref: '#/definitions/thematic_library.KeyTransform'
        type: array
      validation:
        $ref: '#/definitions/thematic_library.KeyValidation'
      weight:
        default: 1
        type: number
    required:
    - fields
    type: object
  thematic_library.SQLQueryConfig:
    properties:
      max_rows:
        default: 10000
        description: 最大返回行数
        type: integer
      parameters:
        additionalProperties: true
        description: 查询参数(支持参数化查询)
        type: object
      sql_query:
        description: SQL查询语句
        type: string
      timeout:
        default: 30
        description: 查询超时时间（秒）
        type: integer
    required:
    - sql_query
    type: object
  thematic_library.ScheduleConfig:
    properties:
      cron_expression:
        type: string
      enabled:
        default: true
        type: boolean
      end_date:
        type: string
      execution_window:
        $ref: '#/definitions/thematic_library.ExecutionWindow'
      interval_seconds:
        type: integer
      max_retries:
        default: 3
        type: integer
      retry_interval:
        default: 300
        type: integer
      scheduled_time:
        type: string
      start_date:
        type: string
      timezone:
        default: Asia/Shanghai
        type: string
      type:
        enum:
        - manual
        - one_time
        - interval
        - cron
        type: string
    required:
    - type
    type: object
  thematic_library.SortField:
    properties:
      field:
        type: string
      order:
        default: ASC
        enum:
        - ASC
        - DESC
        type: string
    required:
    - field
    type: object
  thematic_library.SourceInterfaceConfig:
    properties:
      batch_size:
        default: 1000
        type: integer
      field_mapping:
        items:
          $ref: '#/definitions/thematic_library.FieldMapping'
        type: array
      filter_condition:
        type: string
      incremental_config:
        $ref: '#/definitions/thematic_library.IncrementalConfig'
      interface_id:
        type: string
      parameters:
        additionalProperties:
          type: string
        type: object
      sort_order:
        items:
          $ref: '#/definitions/thematic_library.SortField'
        type: array
    required:
    - interface_id
    type: object
  thematic_library.SourceLibraryConfig:
    properties:
      enabled:
        default: true
        type: boolean
      filter_rules:
        items:
          $ref: '#/definitions/thematic_library.DataFilterRule'
        type: array
      interfaces:
        items:
          $ref: '#/definitions/thematic_library.SourceInterfaceConfig'
        minItems: 1
        type: array
      library_id:
        type: string
      priority:
        default: 1
        type: integer
      sync_mode:
        default: full
        description: full, incremental, realtime
        type: string
    required:
    - interfaces
    - library_id
    type: object
  thematic_library.SyncExecutionOptions:
    properties:
      batch_size:
        default: 1000
        type: integer
      custom_parameters:
        additionalProperties:
          type: string
        type: object
      data_range:
        $ref: '#/definitions/thematic_library.ExecutionDataRange'
      debug_mode:
        default: false
        type: boolean
      dry_run:
        default: false
        type: boolean
      filter_conditions:
        items:
          $ref: '#/definitions/thematic_library.ExecutionFilter'
        type: array
      force_refresh:
        default: false
        type: boolean
      ignore_errors:
        default: false
        type: boolean
      max_records:
        type: integer
      mode:
        enum:
        - full
        - incremental
        - realtime
        - test
        type: string
      output_settings:
        $ref: '#/definitions/thematic_library.ExecutionOutput'
      parallel_workers:
        default: 1
        type: integer
      skip_validation:
        default: false
        type: boolean
      timeout:
        default: 3600
        type: integer
    required:
    - mode
    type: object
  thematic_library.TypeConversionConfig:
    properties:
      auto_convert:
        default: true
        type: boolean
      boolean_map:
        additionalProperties:
          type: boolean
        type: object
      custom_rules:
        items:
          $ref: '#/definitions/thematic_library.ConversionRule'
        type: array
      date_format:
        default: "2006-01-02 15:04:05"
        type: string
      number_format:
        type: string
      strict_mode:
        default: false
        type: boolean
    type: object
  thematic_library.UpdateThematicSyncTaskRequest:
    properties:
      cleansing_rule_configs:
        items:
          $ref: '#/definitions/models.DataCleansingConfig'
        type: array
      description:
        type: string
      field_mapping_rules:
        $ref: '#/definitions/thematic_library.FieldMappingRules'
      governance_config:
        $ref: '#/definitions/thematic_library.GovernanceExecutionConfig'
      key_matching_rules:
        $ref: '#/definitions/thematic_library.KeyMatchingRules'
      masking_rule_configs:
        items:
          $ref: '#/definitions/models.DataMaskingConfig'
        type: array
      quality_rule_configs:
        description: 数据治理规则配置
        items:
          $ref: '#/definitions/models.QualityRuleConfig'
        type: array
      schedule_config:
        $ref: '#/definitions/thematic_library.ScheduleConfig'
      status:
        type: string
      task_name:
        type: string
      updated_by:
        type: string
    required:
    - updated_by
    type: object
info:
  contact: {}
  description: 智慧园区数据底座后台服务，提供数据采集、处理、存储、治理和共享功能
  title: 数据底座服务 API
  version: "1.0"
paths:
  /api/v1/{app_path}:
    get:
      consumes:
      - application/json
      description: 根据应用路径获取API应用的详细信息以及该应用下的所有接口信息，包括主题接口的字段定义
      parameters:
      - description: 应用路径
        in: path
        name: app_path
        required: true
        type: string
      - description: Bearer Token格式的API Key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema: {}
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API应用信息和接口列表
      tags:
      - 数据共享服务
  /api/v1/share/:
    get:
      consumes:
      - application/json
      description: 根据API Key获取该Key所属的API应用详细信息以及该应用下的所有接口信息，包括主题接口的字段定义
      parameters:
      - description: Bearer Token格式的API Key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema: {}
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 通过API Key获取API应用信息和接口列表
      tags:
      - 数据共享服务
  /api/v1/share/{app_path}/{interface_path}:
    get:
      consumes:
      - application/json
      description: 代理对PostgREST的查询请求，实现统一的鉴权、日志、限流和路由功能，仅支持数据查询操作
      parameters:
      - description: 应用路径
        in: path
        name: app_path
        required: true
        type: string
      - description: 接口路径
        in: path
        name: interface_path
        required: true
        type: string
      - description: Bearer Token格式的API Key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema: {}
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 数据访问代理（只读查询）
      tags:
      - 数据共享服务
    head:
      consumes:
      - application/json
      description: 代理对PostgREST的查询请求，实现统一的鉴权、日志、限流和路由功能，仅支持数据查询操作
      parameters:
      - description: 应用路径
        in: path
        name: app_path
        required: true
        type: string
      - description: 接口路径
        in: path
        name: interface_path
        required: true
        type: string
      - description: Bearer Token格式的API Key
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema: {}
        "401":
          description: 未授权
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 资源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "429":
          description: 请求过于频繁
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 数据访问代理（只读查询）
      tags:
      - 数据共享服务
  /basic-libraries:
    get:
      consumes:
      - application/json
      description: 分页获取数据基础库列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 名称搜索（支持中英文）
        in: query
        name: name
        type: string
      - description: 状态过滤
        enum:
        - active
        - inactive
        in: query
        name: status
        type: string
      - description: 创建者过滤
        in: query
        name: created_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BasicLibraryListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据基础库列表
      tags:
      - 数据基础库
  /basic-libraries/{id}:
    delete:
      description: 删除数据基础库
      parameters:
      - description: 数据基础库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据基础库
      tags:
      - 数据基础库
  /basic-libraries/add-basic-library:
    post:
      consumes:
      - application/json
      description: 添加数据基础库
      parameters:
      - description: 数据基础库请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BasicLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据基础库
      tags:
      - 数据基础库
  /basic-libraries/add-datasource:
    post:
      consumes:
      - application/json
      description: 添加数据源
      parameters:
      - description: 数据源请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataSource'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据源
      tags:
      - 数据基础库
  /basic-libraries/add-interface:
    post:
      consumes:
      - application/json
      description: 添加数据接口
      parameters:
      - description: 数据接口请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据接口
      tags:
      - 数据基础库
  /basic-libraries/datasource-manager-stats:
    get:
      description: 获取数据源管理器的运行统计信息，包括总数、类型分布、在线状态等
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据源管理器统计信息
      tags:
      - 数据基础库
  /basic-libraries/datasource-status/{id}:
    get:
      description: 获取数据源的连接状态、最近同步时间等信息
      parameters:
      - description: 数据源ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据源运行状态
      tags:
      - 数据基础库
  /basic-libraries/datasources:
    get:
      consumes:
      - application/json
      description: 分页获取数据源列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 基础库ID过滤
        in: query
        name: library_id
        type: string
      - description: 数据源分类过滤（如：stream, http, db, file等）
        in: query
        name: category
        type: string
      - description: 数据源类型过滤（如：mysql, postgresql, http等）
        in: query
        name: type
        type: string
      - description: 状态过滤
        enum:
        - active
        - inactive
        in: query
        name: status
        type: string
      - description: 名称搜索
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataSourceListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据源列表
      tags:
      - 数据基础库
  /basic-libraries/datasources/{id}:
    delete:
      description: 删除数据源
      parameters:
      - description: 数据源ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据源
      tags:
      - 数据基础库
  /basic-libraries/health-check-all:
    post:
      description: 对管理器中的所有数据源进行健康检查
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 健康检查所有数据源
      tags:
      - 数据基础库
  /basic-libraries/import-csv:
    post:
      consumes:
      - application/json
      description: 将CSV数据导入到指定接口的数据表中，CSV第一行为字段名（name_en）
      parameters:
      - description: CSV导入请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ImportCSVRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ImportCSVResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 导入CSV数据
      tags:
      - 数据基础库
  /basic-libraries/interface-preview/{id}:
    get:
      description: 获取接口的样例数据用于预览
      parameters:
      - description: 接口ID
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: 数据条数
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 预览接口数据
      tags:
      - 数据基础库
  /basic-libraries/interfaces:
    get:
      consumes:
      - application/json
      description: 分页获取数据接口列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 基础库ID过滤
        in: query
        name: library_id
        type: string
      - description: 数据源ID过滤
        in: query
        name: data_source_id
        type: string
      - description: 接口类型过滤（如：realtime, batch）
        in: query
        name: interface_type
        type: string
      - description: 状态过滤
        enum:
        - active
        - inactive
        in: query
        name: status
        type: string
      - description: 名称搜索
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataInterfaceListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据接口列表
      tags:
      - 数据基础库
  /basic-libraries/interfaces/{id}:
    delete:
      description: 删除数据接口
      parameters:
      - description: 数据接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据接口
      tags:
      - 数据基础库
  /basic-libraries/reload-datasource/{id}:
    post:
      description: 重新从数据库加载数据源配置并更新管理器中的实例
      parameters:
      - description: 数据源ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 重新加载数据源
      tags:
      - 数据基础库
  /basic-libraries/resident-datasources:
    get:
      description: 获取所有常驻数据源的运行状态和统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取常驻数据源状态
      tags:
      - 数据基础库
  /basic-libraries/restart-resident-datasource/{id}:
    post:
      description: 重启指定的常驻数据源
      parameters:
      - description: 数据源ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 重启常驻数据源
      tags:
      - 数据基础库
  /basic-libraries/test-datasource:
    post:
      consumes:
      - application/json
      description: 测试数据源连接和数据获取能力
      parameters:
      - description: 测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DataSourceTestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataSourceTestResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试数据源连接
      tags:
      - 数据基础库
  /basic-libraries/test-interface:
    post:
      consumes:
      - application/json
      description: 测试数据接口的调用和数据获取能力
      parameters:
      - description: 测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.InterfaceTestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.InterfaceTestResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试接口调用
      tags:
      - 数据基础库
  /basic-libraries/update-basic-library:
    post:
      consumes:
      - application/json
      description: 修改数据基础库信息
      parameters:
      - description: 修改数据基础库请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBasicLibraryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 修改数据基础库
      tags:
      - 数据基础库
  /basic-libraries/update-datasource:
    post:
      consumes:
      - application/json
      description: 修改数据源信息
      parameters:
      - description: 修改数据源请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateDataSourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 修改数据源
      tags:
      - 数据基础库
  /basic-libraries/update-interface:
    post:
      consumes:
      - application/json
      description: 修改数据接口信息
      parameters:
      - description: 修改数据接口请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateDataInterfaceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 修改数据接口
      tags:
      - 数据基础库
  /basic-libraries/update-interface-fields:
    post:
      consumes:
      - application/json
      description: 更新数据接口的字段配置，并可选择同时更新数据库表结构
      parameters:
      - description: 更新字段配置请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateInterfaceFieldsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新接口字段配置
      tags:
      - 数据基础库
  /dashboard/basic-library-stats:
    get:
      description: 获取基础库的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BasicLibraryStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取基础库统计数据
      tags:
      - Dashboard
  /dashboard/data-quality-stats:
    get:
      description: 获取数据质量的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataQualityStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量统计数据
      tags:
      - Dashboard
  /dashboard/data-sharing-stats:
    get:
      description: 获取数据共享的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataSharingStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据共享统计数据
      tags:
      - Dashboard
  /dashboard/overview:
    get:
      description: 获取系统各模块的统计数据和关键指标
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DashboardOverviewResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取Dashboard总览数据
      tags:
      - Dashboard
  /dashboard/sync-task-stats:
    get:
      description: 获取同步任务的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.SyncTaskStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务统计数据
      tags:
      - Dashboard
  /dashboard/system-activity-stats:
    get:
      description: 获取系统活动的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.SystemActivityStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取系统活动统计数据
      tags:
      - Dashboard
  /dashboard/thematic-library-stats:
    get:
      description: 获取主题库的详细统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ThematicLibraryStats'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题库统计数据
      tags:
      - Dashboard
  /data-quality/checks:
    post:
      consumes:
      - application/json
      description: 对指定对象执行数据质量检查并生成报告
      parameters:
      - description: 质量检查请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.RunQualityCheckRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 检查成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityReportResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行数据质量检查
      tags:
      - 数据质量
  /data-quality/cleansing-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据清洗规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - standardization
        - deduplication
        - validation
        - transformation
        - enrichment
        in: query
        name: rule_type
        type: string
      - description: 目标表
        in: query
        name: target_table
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.CleansingRuleListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据清洗规则列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据清洗规则
      parameters:
      - description: 数据清洗规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/governance.CreateCleansingRuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.CleansingRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据清洗规则
      tags:
      - 数据质量
  /data-quality/cleansing-rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据清洗规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据清洗规则
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据ID获取数据清洗规则详情
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.CleansingRuleResponse'
              type: object
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据清洗规则
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新数据清洗规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/governance.UpdateCleansingRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据清洗规则
      tags:
      - 数据质量
  /data-quality/data-lineage:
    post:
      consumes:
      - application/json
      description: 创建新的数据血缘关系
      parameters:
      - description: 数据血缘信息
        in: body
        name: lineage
        required: true
        schema:
          $ref: '#/definitions/governance.CreateDataLineageRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.DataLineageResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据血缘关系
      tags:
      - 数据质量
  /data-quality/data-lineage/{object_id}:
    get:
      consumes:
      - application/json
      description: 获取指定数据对象的血缘关系图
      parameters:
      - description: 数据对象ID
        in: path
        name: object_id
        required: true
        type: string
      - description: 对象类型
        enum:
        - table
        - interface
        - thematic_interface
        in: query
        name: object_type
        type: string
      - default: both
        description: 血缘方向
        enum:
        - upstream
        - downstream
        - both
        in: query
        name: direction
        type: string
      - default: 3
        description: 血缘深度
        in: query
        name: depth
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.DataLineageGraphResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据血缘图
      tags:
      - 数据质量
  /data-quality/masking-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据脱敏规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 数据源
        in: query
        name: data_source
        type: string
      - description: 脱敏类型
        enum:
        - mask
        - replace
        - encrypt
        - pseudonymize
        in: query
        name: masking_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MaskingRuleListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据脱敏规则列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据脱敏规则
      parameters:
      - description: 数据脱敏规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/governance.CreateMaskingRuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MaskingRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据脱敏规则
      tags:
      - 数据质量
  /data-quality/masking-rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据脱敏规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据脱敏规则
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据ID获取数据脱敏规则详情
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MaskingRuleResponse'
              type: object
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据脱敏规则
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新数据脱敏规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/governance.UpdateMaskingRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据脱敏规则
      tags:
      - 数据质量
  /data-quality/metadata:
    get:
      consumes:
      - application/json
      description: 分页获取元数据列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 元数据类型
        enum:
        - technical
        - business
        - management
        in: query
        name: type
        type: string
      - description: 元数据名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MetadataListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取元数据列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的元数据
      parameters:
      - description: 元数据信息
        in: body
        name: metadata
        required: true
        schema:
          $ref: '#/definitions/governance.CreateMetadataRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MetadataResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建元数据
      tags:
      - 数据质量
  /data-quality/metadata/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的元数据
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除元数据
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据ID获取元数据详情
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.MetadataResponse'
              type: object
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取元数据
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新元数据信息
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/governance.UpdateMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新元数据
      tags:
      - 数据质量
  /data-quality/reports:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量报告列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 对象类型
        enum:
        - interface
        - thematic_interface
        in: query
        name: object_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityReportListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量报告列表
      tags:
      - 数据质量
  /data-quality/reports/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取数据质量报告详情
      parameters:
      - description: 报告ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityReportResponse'
              type: object
        "404":
          description: 报告不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据质量报告
      tags:
      - 数据质量
  /data-quality/rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - completeness
        - accuracy
        - consistency
        - validity
        - uniqueness
        - timeliness
        - standardization
        in: query
        name: type
        type: string
      - description: 关联对象类型
        enum:
        - interface
        - thematic_interface
        in: query
        name: object_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityRuleListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量规则列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据质量规则
      parameters:
      - description: 数据质量规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/governance.CreateQualityRuleRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据质量规则
      tags:
      - 数据质量
  /data-quality/rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据质量规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据质量规则
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据ID获取数据质量规则详情
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityRuleResponse'
              type: object
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据质量规则
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新数据质量规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/governance.UpdateQualityRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据质量规则
      tags:
      - 数据质量
  /data-quality/system-logs:
    get:
      consumes:
      - application/json
      description: 分页获取系统日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 操作类型
        in: query
        name: operation_type
        type: string
      - description: 对象类型
        in: query
        name: object_type
        type: string
      - description: 开始时间
        format: date-time
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: date-time
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.SystemLogListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取系统日志列表
      tags:
      - 数据质量
  /data-quality/tasks:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量检测任务列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 任务状态
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        in: query
        name: status
        type: string
      - description: 任务类型
        enum:
        - scheduled
        - manual
        - realtime
        in: query
        name: task_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityTaskListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量检测任务列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据质量检测任务
      parameters:
      - description: 质量检测任务信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/governance.CreateQualityTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityTaskResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据质量检测任务
      tags:
      - 数据质量
  /data-quality/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据质量检测任务及其相关执行记录
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据质量检测任务
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据ID获取数据质量检测任务详情
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityTaskResponse'
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据质量检测任务
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新数据质量检测任务信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          $ref: '#/definitions/governance.UpdateQualityTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据质量检测任务
      tags:
      - 数据质量
  /data-quality/tasks/{id}/executions:
    get:
      consumes:
      - application/json
      description: 获取指定任务的执行记录列表
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityTaskExecutionListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量检测任务执行记录
      tags:
      - 数据质量
  /data-quality/tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 手动启动指定的数据质量检测任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 启动成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityTaskExecutionResponse'
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动数据质量检测任务
      tags:
      - 数据质量
  /data-quality/tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止正在运行的数据质量检测任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 停止成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止数据质量检测任务
      tags:
      - 数据质量
  /data-quality/templates/cleansing-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据清洗模板列表，包括内置模板
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - standardization
        - deduplication
        - validation
        - transformation
        - enrichment
        in: query
        name: rule_type
        type: string
      - description: 分类
        enum:
        - data_format
        - data_quality
        - data_integrity
        in: query
        name: category
        type: string
      - description: 是否为内置模板
        in: query
        name: is_built_in
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.DataCleansingTemplateListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据清洗模板列表
      tags:
      - 数据质量
  /data-quality/templates/masking-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据脱敏模板列表，包括内置模板
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 脱敏类型
        enum:
        - mask
        - replace
        - encrypt
        - pseudonymize
        in: query
        name: masking_type
        type: string
      - description: 分类
        enum:
        - personal_info
        - financial
        - medical
        - business
        - custom
        in: query
        name: category
        type: string
      - description: 安全级别
        enum:
        - low
        - medium
        - high
        - critical
        in: query
        name: security_level
        type: string
      - description: 是否为内置模板
        in: query
        name: is_built_in
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.DataMaskingTemplateListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据脱敏模板列表
      tags:
      - 数据质量
  /data-quality/templates/quality-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量规则模板列表，包括内置模板
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - completeness
        - accuracy
        - consistency
        - validity
        - uniqueness
        - timeliness
        - standardization
        in: query
        name: rule_type
        type: string
      - description: 分类
        enum:
        - basic_quality
        - data_cleansing
        - data_validation
        in: query
        name: category
        type: string
      - description: 是否为内置模板
        in: query
        name: is_built_in
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.QualityRuleTemplateListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量规则模板列表
      tags:
      - 数据质量
  /data-quality/test/batch-rules:
    post:
      consumes:
      - application/json
      description: 批量测试质量规则、脱敏规则和清洗规则的组合执行效果
      parameters:
      - description: 批量规则测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.TestBatchRulesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 测试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.TestRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量测试多个规则
      tags:
      - 数据质量
  /data-quality/test/cleansing-rule:
    post:
      consumes:
      - application/json
      description: 使用测试数据验证数据清洗规则的执行效果
      parameters:
      - description: 清洗规则测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.TestCleansingRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 测试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.TestRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试数据清洗规则
      tags:
      - 数据质量
  /data-quality/test/masking-rule:
    post:
      consumes:
      - application/json
      description: 使用测试数据验证数据脱敏规则的执行效果
      parameters:
      - description: 脱敏规则测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.TestMaskingRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 测试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.TestRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试数据脱敏规则
      tags:
      - 数据质量
  /data-quality/test/quality-rule:
    post:
      consumes:
      - application/json
      description: 使用测试数据验证数据质量规则的执行效果
      parameters:
      - description: 质量规则测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.TestQualityRuleRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 测试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.TestRuleResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试数据质量规则
      tags:
      - 数据质量
  /data-quality/test/rule-preview:
    post:
      consumes:
      - application/json
      description: 预览规则执行效果，不实际执行规则，仅显示预期变化
      parameters:
      - description: 规则预览请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/governance.TestRulePreviewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 预览成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/governance.TestRulePreviewResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 预览规则执行效果
      tags:
      - 数据质量
  /data-view/{library_type}/{library_id}/tables:
    get:
      consumes:
      - application/json
      description: 获取指定基础库或主题库的所有数据接口(表)信息
      parameters:
      - description: 库类型
        enum:
        - basic_library
        - thematic_library
        in: path
        name: library_type
        required: true
        type: string
      - description: 库ID
        format: uuid
        in: path
        name: library_id
        required: true
        type: string
      - default: false
        description: 是否包含列信息
        in: query
        name: include_columns
        type: boolean
      - default: false
        description: 是否包含关系信息
        in: query
        name: include_relationships
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.LibraryTablesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取库的所有数据接口
      tags:
      - 数据查看
  /data-view/{library_type}/{library_id}/tables/{table_name}/data:
    get:
      consumes:
      - application/json
      description: 获取指定表的数据内容
      parameters:
      - description: 库类型
        enum:
        - basic_library
        - thematic_library
        in: path
        name: library_type
        required: true
        type: string
      - description: 库ID
        format: uuid
        in: path
        name: library_id
        required: true
        type: string
      - description: 表名
        in: path
        name: table_name
        required: true
        type: string
      - default: 100
        description: 限制返回行数
        in: query
        maximum: 1000
        minimum: 1
        name: limit
        type: integer
      - default: 0
        description: 偏移量
        in: query
        minimum: 0
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取表数据
      tags:
      - 数据查看
  /data-view/{library_type}/{library_id}/tables/{table_name}/structure:
    get:
      consumes:
      - application/json
      description: 获取指定表的结构信息
      parameters:
      - description: 库类型
        enum:
        - basic_library
        - thematic_library
        in: path
        name: library_type
        required: true
        type: string
      - description: 库ID
        format: uuid
        in: path
        name: library_id
        required: true
        type: string
      - description: 表名
        in: path
        name: table_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取表结构
      tags:
      - 数据查看
  /events/broadcast:
    post:
      consumes:
      - application/json
      description: 向所有连接的用户广播SSE事件
      parameters:
      - description: 广播事件请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.BroadcastEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 广播事件
      tags:
      - 事件管理
  /events/connections:
    get:
      consumes:
      - application/json
      description: 分页获取SSE连接列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 用户名过滤
        in: query
        name: user_name
        type: string
      - description: 连接状态过滤
        in: query
        name: is_active
        type: boolean
      - description: 客户端IP过滤
        in: query
        name: client_ip
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.SSEConnectionListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取SSE连接列表
      tags:
      - 事件管理
  /events/history:
    get:
      consumes:
      - application/json
      description: 分页获取事件历史列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 用户名过滤
        in: query
        name: user_name
        type: string
      - description: 事件类型过滤
        in: query
        name: event_type
        type: string
      - description: 发送状态过滤
        in: query
        name: sent
        type: boolean
      - description: 读取状态过滤
        in: query
        name: read
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.EventHistoryListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取事件历史列表
      tags:
      - 事件管理
  /events/send:
    post:
      consumes:
      - application/json
      description: 向指定用户发送SSE事件
      parameters:
      - description: 发送事件请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SendEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 发送事件
      tags:
      - 事件管理
  /health:
    get:
      description: 检查服务健康状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 健康检查
      tags:
      - 系统
  /meta/basic-libraries/data-interface-configs:
    get:
      description: 获取所有数据接口配置元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.DataInterfaceConfigDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据接口配置元数据
      tags:
      - 元数据
  /meta/basic-libraries/data-sources:
    get:
      description: 获取所有数据源类型元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.DataSourceTypeDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据源类型元数据
      tags:
      - 元数据
  /meta/data-governance:
    get:
      description: 获取数据治理相关的所有元数据，包括质量规则类型、检查状态、脱敏类型、转换规则类型、校验规则类型、任务类型、血缘关系类型等
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataGovernanceMetadataResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据治理完整元数据
      tags:
      - 元数据
  /meta/sync-tasks:
    get:
      description: 获取所有同步任务相关元数据，包括任务类型、状态、调度类型等
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有同步任务元数据
      tags:
      - 元数据
  /meta/thematic-libraries/access-levels:
    get:
      description: 获取所有数据主题库访问级别元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryAccessLevel'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库访问级别元数据
      tags:
      - 元数据
  /meta/thematic-libraries/all:
    get:
      description: 获取主题库相关的所有元数据，包括分类、数据域、访问级别、状态等
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ThematicLibraryMetadataResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题库完整元数据
      tags:
      - 元数据
  /meta/thematic-libraries/categories:
    get:
      description: 获取所有数据主题库分类元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryCategory'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库分类元数据
      tags:
      - 元数据
  /meta/thematic-libraries/domains:
    get:
      description: 获取所有数据主题库域元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryDomain'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库域元数据
      tags:
      - 元数据
  /meta/thematic-libraries/interface-statuses:
    get:
      description: 获取主题接口状态元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicInterfaceStatus'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口状态元数据
      tags:
      - 元数据
  /meta/thematic-libraries/interface-types:
    get:
      description: 获取主题接口类型元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicInterfaceType'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口类型元数据
      tags:
      - 元数据
  /meta/thematic-libraries/statuses:
    get:
      description: 获取主题库状态元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryStatus'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题库状态元数据
      tags:
      - 元数据
  /meta/thematic-sync-configs:
    get:
      description: 获取主题库同步各种配置的字段定义，用于前端动态生成配置表单
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.ThematicSyncConfigDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题库同步配置定义
      tags:
      - 元数据
  /meta/thematic-sync-tasks:
    get:
      description: 获取所有主题库同步任务相关元数据，包括任务状态、触发类型、执行状态等
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有主题库同步任务元数据
      tags:
      - 元数据
  /monitoring/config:
    get:
      consumes:
      - application/json
      description: 获取VictoriaMetrics和Loki的连接配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
      summary: 获取监控配置
      tags:
      - 监控配置
  /monitoring/logs/descriptions:
    get:
      consumes:
      - application/json
      description: 获取所有日志查询模板的中文描述信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 获取日志模板描述
      tags:
      - 监控模板
  /monitoring/loki/labels/{label}/values:
    get:
      consumes:
      - application/json
      description: 获取指定标签的所有可能值
      parameters:
      - description: 标签名称
        in: path
        name: label
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取日志标签值
      tags:
      - 监控查询
  /monitoring/metrics/descriptions:
    get:
      consumes:
      - application/json
      description: 获取所有指标的中文描述信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 获取指标描述
      tags:
      - 监控模板
  /monitoring/query:
    post:
      consumes:
      - application/json
      description: 根据查询类型自动选择 Metrics 或 Logs 查询
      parameters:
      - description: 查询请求
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/meta.MonitorQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行自定义查询
      tags:
      - 监控查询
  /monitoring/query/logs:
    post:
      consumes:
      - application/json
      description: 执行自定义的 LogQL 查询
      parameters:
      - description: 查询请求
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/meta.MonitorQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 通用日志查询
      tags:
      - 监控查询
  /monitoring/query/metrics:
    post:
      consumes:
      - application/json
      description: 执行自定义的 PromQL 查询，支持即时查询和区间查询
      parameters:
      - description: 查询请求
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/meta.MonitorQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 通用指标查询
      tags:
      - 监控查询
  /monitoring/query/validate:
    post:
      consumes:
      - application/json
      description: 验证 PromQL 或 LogQL 查询语法是否正确
      parameters:
      - description: 查询请求
        in: body
        name: query
        required: true
        schema:
          $ref: '#/definitions/meta.MonitorQueryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 验证查询语法
      tags:
      - 监控查询
  /monitoring/templates/logs:
    get:
      consumes:
      - application/json
      description: 获取常用的日志查询模板列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取日志查询模板
      tags:
      - 监控模板
  /monitoring/templates/metrics:
    get:
      consumes:
      - application/json
      description: 获取常用的指标查询模板列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取指标查询模板
      tags:
      - 监控模板
  /ready:
    get:
      description: 检查服务是否就绪
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 就绪检查
      tags:
      - 系统
  /sharing/api-applications:
    get:
      consumes:
      - application/json
      description: 分页获取API应用列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ApiApplicationListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API应用列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的API接入应用
      parameters:
      - description: API应用信息
        in: body
        name: app
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateApiApplicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiApplication'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建API应用
      tags:
      - 数据共享服务
  /sharing/api-applications/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的API应用
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除API应用
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取API应用详情
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiApplication'
              type: object
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取API应用
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新API应用信息
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API应用
      tags:
      - 数据共享服务
  /sharing/api-interfaces:
    get:
      consumes:
      - application/json
      description: 查询共享接口列表，可按 api_application_id 过滤
      parameters:
      - description: 应用ID
        in: query
        name: api_application_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ApiInterface'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取共享接口列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建一个共享接口，请求体包含 api_application_id, thematic_interface_id, path
      parameters:
      - description: 接口信息
        in: body
        name: interface_param
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateApiInterfaceRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiInterface'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建共享接口
      tags:
      - 数据共享服务
  /sharing/api-interfaces/{id}:
    delete:
      consumes:
      - application/json
      description: 删除一个共享接口
      parameters:
      - description: 接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除共享接口
      tags:
      - 数据共享服务
  /sharing/api-keys:
    get:
      consumes:
      - application/json
      description: 获取API密钥列表（不包含Key本身），可选择按应用过滤
      parameters:
      - description: 应用ID，用于过滤特定应用的ApiKey
        in: query
        name: app_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ApiKey'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API密钥列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建一个新的ApiKey并关联到指定的应用，返回完整的Key值（仅此一次）
      parameters:
      - description: ApiKey信息
        in: body
        name: key
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateApiKeyRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.CreateApiKeyResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 生成API密钥
      tags:
      - 数据共享服务
  /sharing/api-keys/{id}:
    delete:
      consumes:
      - application/json
      description: 吊销（删除）一个ApiKey
      parameters:
      - description: 密钥ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除API密钥
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取API密钥详情（不包含Key本身）
      parameters:
      - description: 密钥ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiKey'
              type: object
        "404":
          description: 密钥不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API密钥详情
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新ApiKey信息（如名称、描述、状态）
      parameters:
      - description: 密钥ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API密钥
      tags:
      - 数据共享服务
  /sharing/api-keys/{id}/applications:
    put:
      consumes:
      - application/json
      description: 更新ApiKey关联的应用列表
      parameters:
      - description: 密钥ID
        in: path
        name: id
        required: true
        type: string
      - description: 关联应用信息
        in: body
        name: applications
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateApiKeyApplicationsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API密钥关联应用
      tags:
      - 数据共享服务
  /sharing/api-rate-limits:
    get:
      consumes:
      - application/json
      description: 分页获取API限流规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用ID
        in: query
        name: application_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ApiRateLimitListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API限流规则列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的API限流规则
      parameters:
      - description: API限流规则信息
        in: body
        name: limit
        required: true
        schema:
          $ref: '#/definitions/models.ApiRateLimit'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiRateLimit'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建API限流规则
      tags:
      - 数据共享服务
  /sharing/api-rate-limits/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的API限流规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除API限流规则
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新API限流规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API限流规则
      tags:
      - 数据共享服务
  /sharing/api-usage-logs:
    get:
      consumes:
      - application/json
      description: 分页获取API使用日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用ID
        in: query
        name: application_id
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: string
      - description: 开始时间
        in: query
        name: start_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ApiUsageLogListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API使用日志列表
      tags:
      - 数据共享服务
  /sharing/data-access-requests:
    get:
      consumes:
      - application/json
      description: 分页获取数据使用申请列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 申请人ID
        in: query
        name: requester_id
        type: string
      - description: 资源类型
        in: query
        name: resource_type
        type: string
      - description: 申请状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataAccessRequestListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据使用申请列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的数据使用申请
      parameters:
      - description: 数据使用申请信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataAccessRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataAccessRequest'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-access-requests/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取数据使用申请详情
      parameters:
      - description: 申请ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataAccessRequest'
              type: object
        "404":
          description: 申请不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-access-requests/{id}/approve:
    post:
      consumes:
      - application/json
      description: 审批数据使用申请
      parameters:
      - description: 申请ID
        in: path
        name: id
        required: true
        type: string
      - description: 审批信息
        in: body
        name: approval
        required: true
        schema:
          $ref: '#/definitions/controllers.ApproveDataAccessRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 审批成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 申请不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 审批数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-subscriptions:
    get:
      consumes:
      - application/json
      description: 分页获取数据订阅列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 订阅者ID
        in: query
        name: subscriber_id
        type: string
      - description: 资源类型
        in: query
        name: resource_type
        type: string
      - description: 订阅状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataSubscriptionListResponse'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据订阅列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的数据订阅
      parameters:
      - description: 数据订阅信息
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.DataSubscription'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSubscription'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据订阅
      tags:
      - 数据共享服务
  /sharing/data-subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据订阅
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据订阅
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取数据订阅详情
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSubscription'
              type: object
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据订阅
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新数据订阅信息
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据订阅
      tags:
      - 数据共享服务
  /sse/{user_name}:
    get:
      description: 前端页面通过此接口建立SSE连接，接收实时事件推送
      parameters:
      - description: 用户名
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
      summary: 建立SSE连接
      tags:
      - 事件管理
  /sync/tasks:
    get:
      consumes:
      - application/json
      description: |-
        分页获取基础库同步任务列表，支持多种过滤条件

        **查询参数说明:**
        - page: 页码，默认1
        - size: 每页大小，默认10，最大100
        - library_id: 基础库ID过滤
        - data_source_id: 数据源ID过滤
        - status: 任务状态过滤
        - task_type: 任务类型过滤
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 基础库ID
        in: query
        name: library_id
        type: string
      - description: 数据源ID
        in: query
        name: data_source_id
        type: string
      - description: 任务状态
        in: query
        name: status
        type: string
      - description: 任务类型
        in: query
        name: task_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.SyncTaskListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取基础库同步任务列表
      tags:
      - 基础库同步任务
    post:
      consumes:
      - application/json
      description: |-
        创建新的基础库数据同步任务，专门处理基础库数据同步

        **支持的任务类型:**
        - batch_sync: 批量同步（根据接口配置自动判断全量/增量）
        - realtime_sync: 实时同步

        **任务生命周期状态:**
        - draft: 草稿，正在编辑，不参与调度
        - active: 激活，已配置完成，参与调度
        - paused: 暂停，临时停止调度，但保留配置

        **任务执行状态:**
        - idle: 空闲，等待下次执行
        - running: 执行中，正在执行同步
        - success: 成功，最近一次执行成功
        - failed: 失败，最近一次执行失败

        **状态流转:**
        生命周期: draft → active ↔ paused
        执行状态: idle → running → success/failed → idle

        **注意:**
        - 新创建的任务默认为 draft 状态，需要手动激活后才会参与调度
        - 此接口仅支持基础库同步任务，不支持主题库同步
      parameters:
      - description: 基础库同步任务创建信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.SyncTaskCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建基础库同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的同步任务，只能删除已完成、失败或已取消的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许删除
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除同步任务
      tags:
      - 基础库同步任务
    get:
      consumes:
      - application/json
      description: 根据任务ID获取同步任务的详细信息，包括关联的库信息、数据源信息等
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务详情
      tags:
      - 基础库同步任务
    put:
      consumes:
      - application/json
      description: |-
        更新同步任务的配置信息和状态

        **可更新状态:**
        - draft 和 paused 状态的任务可以更新任何配置
        - active 状态且非运行中的任务也可以更新
        - running 状态的任务不允许更新

        **状态变更:**
        - 可以通过 status 字段变更任务状态（draft/active/paused）
        - 状态变更会自动触发调度器的添加/移除操作
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.SyncTaskUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许更新
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/activate:
    post:
      consumes:
      - application/json
      description: |-
        激活同步任务，将 draft 或 paused 状态改为 active，并添加到调度器

        **状态转换:**
        - draft → active: 首次激活任务
        - paused → active: 恢复已暂停的任务

        **注意:**
        - 只有 draft 或 paused 状态的任务可以激活
        - 激活后，如果配置了调度（cron/interval/once），任务会自动加入调度器
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 激活成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许激活
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 激活同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/cancel:
    post:
      consumes:
      - application/json
      description: |-
        暂停指定的同步任务，将 active 状态改为 paused，并从调度器中移除

        **注意:**
        - 此接口已重命名为 PauseSyncTask，但保留 cancel 路由以保持向后兼容
        - 建议使用 /sync/tasks/{id}/pause 接口
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 暂停成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许暂停
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 暂停同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/executions:
    get:
      consumes:
      - application/json
      description: 获取指定同步任务的所有执行记录
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.SyncTaskExecutionListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取指定任务的执行记录
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/pause:
    post:
      consumes:
      - application/json
      description: |-
        暂停同步任务，将 active 状态改为 paused，并从调度器中移除

        **状态转换:**
        - active → paused: 暂停任务调度

        **注意:**
        - 只有 active 状态的任务可以暂停
        - 暂停后，任务会从调度器中移除，不再自动执行
        - 如果任务正在运行，会先停止执行，然后更新为 paused 状态
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 暂停成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许暂停
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 暂停同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/resume:
    post:
      consumes:
      - application/json
      description: |-
        恢复已暂停的同步任务，将 paused 状态改为 active，并重新添加到调度器

        **状态转换:**
        - paused → active: 恢复任务调度

        **注意:**
        - 只有 paused 状态的任务可以恢复
        - 恢复后，任务会重新加入调度器
        - 此接口等同于 ActivateSyncTask，但语义更明确
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 恢复成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许恢复
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 恢复同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/retry:
    post:
      consumes:
      - application/json
      description: 重试失败的同步任务，会创建一个新的任务实例
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 重试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许重试
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 重试同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的同步任务，将任务提交给同步引擎执行
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许启动
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/status:
    get:
      consumes:
      - application/json
      description: 获取同步任务的实时执行状态和进度信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.SyncTaskStatusResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务状态
      tags:
      - 基础库同步任务
  /sync/tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止正在执行的同步任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 停止成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许停止
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/batch-delete:
    post:
      consumes:
      - application/json
      description: 批量删除多个同步任务，只能删除已完成、失败或已取消的任务
      parameters:
      - description: 批量删除请求
        in: body
        name: tasks
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.BatchDeleteResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量删除同步任务
      tags:
      - 基础库同步任务
  /sync/tasks/executions:
    get:
      consumes:
      - application/json
      description: 分页获取同步任务执行记录列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 任务ID
        in: query
        name: task_id
        type: string
      - description: 执行状态
        in: query
        name: status
        type: string
      - description: 执行类型
        in: query
        name: execution_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.SyncTaskExecutionListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务执行记录列表
      tags:
      - 基础库同步任务
  /sync/tasks/executions/{id}:
    get:
      consumes:
      - application/json
      description: 根据执行记录ID获取同步任务执行记录的详细信息
      parameters:
      - description: 执行记录ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTaskExecution'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 执行记录不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务执行记录详情
      tags:
      - 基础库同步任务
  /sync/tasks/statistics:
    get:
      consumes:
      - application/json
      description: 获取同步任务的统计数据，包括各状态任务数量、成功率等
      parameters:
      - description: 基础库ID过滤
        in: query
        name: library_id
        type: string
      - description: 数据源ID过滤
        in: query
        name: data_source_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/basic_library.SyncTaskStatistics'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务统计信息
      tags:
      - 基础库同步任务
  /tables/manage-schema:
    post:
      consumes:
      - application/json
      description: 通过PgMetaApi动态创建、修改、删除数据库表结构
      parameters:
      - description: 表结构操作请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TableSchemaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 管理数据库表结构
      tags:
      - 数据基础库
  /thematic-interfaces:
    get:
      consumes:
      - application/json
      description: 分页获取主题接口列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 主题库ID过滤
        in: query
        name: library_id
        type: string
      - description: 接口类型过滤
        enum:
        - realtime
        - batch
        in: query
        name: interface_type
        type: string
      - description: 状态过滤
        enum:
        - active
        - inactive
        in: query
        name: status
        type: string
      - description: 名称搜索（支持中英文）
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ThematicInterfaceListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口列表
      tags:
      - 主题接口
    post:
      consumes:
      - application/json
      description: 创建新的主题接口
      parameters:
      - description: 主题接口信息
        in: body
        name: thematic_interface
        required: true
        schema:
          $ref: '#/definitions/models.ThematicInterface'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicInterface'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建主题接口
      tags:
      - 主题接口
  /thematic-interfaces/{id}:
    delete:
      description: 软删除主题接口（更新状态为inactive）
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除主题接口
      tags:
      - 主题接口
    get:
      description: 根据ID获取主题接口详细信息
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicInterface'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口详情
      tags:
      - 主题接口
    put:
      consumes:
      - application/json
      description: 更新主题接口信息
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: thematic_interface
        required: true
        schema:
          $ref: '#/definitions/models.ThematicInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新主题接口
      tags:
      - 主题接口
  /thematic-interfaces/{id}/delete-view:
    delete:
      description: 删除主题接口的数据库视图
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除主题接口视图
      tags:
      - 主题接口视图
  /thematic-interfaces/{id}/view-sql:
    get:
      description: 获取主题接口的视图SQL语句
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口视图SQL
      tags:
      - 主题接口视图
  /thematic-interfaces/create-view:
    post:
      consumes:
      - application/json
      description: 为主题接口创建数据库视图，支持CREATE OR REPLACE VIEW语法
      parameters:
      - description: 创建视图请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateThematicInterfaceViewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建主题接口视图
      tags:
      - 主题接口视图
  /thematic-interfaces/update-fields:
    post:
      consumes:
      - application/json
      description: 更新主题接口的字段配置，自动同步数据库表结构（如表不存在则创建，存在则修改）
      parameters:
      - description: 更新字段配置请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateThematicInterfaceFieldsRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新主题接口字段配置
      tags:
      - 主题接口
  /thematic-interfaces/update-view:
    post:
      consumes:
      - application/json
      description: 更新主题接口的数据库视图SQL
      parameters:
      - description: 更新视图请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateThematicInterfaceViewRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新主题接口视图
      tags:
      - 主题接口视图
  /thematic-libraries:
    get:
      consumes:
      - application/json
      description: 分页获取数据主题库列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 主题分类过滤
        enum:
        - business
        - technical
        - analysis
        - report
        in: query
        name: category
        type: string
      - description: 数据域过滤
        in: query
        name: domain
        type: string
      - description: 状态过滤
        enum:
        - draft
        - published
        - archived
        in: query
        name: status
        type: string
      - description: 名称搜索（支持中英文）
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.ThematicLibraryListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据主题库列表
      tags:
      - 数据主题库
    post:
      consumes:
      - application/json
      description: 创建新的数据主题库
      parameters:
      - description: 数据主题库信息
        in: body
        name: library
        required: true
        schema:
          $ref: '#/definitions/models.ThematicLibrary'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicLibrary'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据主题库
      tags:
      - 数据主题库
  /thematic-libraries/{id}:
    delete:
      description: 删除数据主题库
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据主题库
      tags:
      - 数据主题库
    get:
      description: 根据ID获取数据主题库详细信息
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicLibrary'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据主题库详情
      tags:
      - 数据主题库
    put:
      consumes:
      - application/json
      description: 更新数据主题库信息
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: library
        required: true
        schema:
          $ref: '#/definitions/models.ThematicLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据主题库
      tags:
      - 数据主题库
  /thematic-libraries/{id}/publish:
    post:
      description: 将主题库状态更新为已发布
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 发布数据主题库
      tags:
      - 数据主题库
  /thematic-sync/executions/{id}:
    get:
      description: 获取指定执行记录的详细信息
      parameters:
      - description: 执行记录ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步执行记录详情
      tags:
      - 主题同步
  /thematic-sync/tasks:
    get:
      consumes:
      - application/json
      description: 分页获取主题同步任务列表，支持多种过滤条件
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 任务名称搜索
        in: query
        name: name
        type: string
      - description: 状态过滤
        enum:
        - active
        - inactive
        - paused
        in: query
        name: status
        type: string
      - description: 同步模式过滤
        enum:
        - manual
        - one_time
        - timed
        - cron
        in: query
        name: sync_mode
        type: string
      - description: 主题库ID过滤
        in: query
        name: thematic_library_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.SyncTaskListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务列表
      tags:
      - 主题同步
    post:
      consumes:
      - application/json
      description: 创建主题数据同步任务
      parameters:
      - description: 创建同步任务请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/thematic_library.CreateThematicSyncTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建同步任务
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}:
    delete:
      description: 删除指定ID的同步任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除同步任务
      tags:
      - 主题同步
    get:
      description: 获取指定ID的同步任务详细信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务详情
      tags:
      - 主题同步
    put:
      consumes:
      - application/json
      description: 更新指定ID的同步任务信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新同步任务请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/thematic_library.UpdateThematicSyncTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新同步任务
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}/activate:
    post:
      description: 激活同步任务，任务将可以被调度执行
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 激活同步任务
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}/execute:
    post:
      consumes:
      - application/json
      description: 立即执行指定的同步任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 执行同步任务请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.ExecuteSyncTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行同步任务
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}/executions:
    get:
      consumes:
      - application/json
      description: 分页获取指定任务的同步执行记录列表
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 执行状态过滤
        enum:
        - running
        - completed
        - failed
        - cancelled
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.SyncExecutionListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步执行记录列表
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}/pause:
    post:
      description: 暂停同步任务，任务将不会被调度执行，但可以手动执行
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 暂停同步任务
      tags:
      - 主题同步
  /thematic-sync/tasks/{id}/status:
    get:
      description: 获取指定同步任务的当前状态信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务状态
      tags:
      - 主题同步
  /thematic-sync/tasks/statistics:
    get:
      description: 获取主题同步任务的统计信息，包括总数、状态分布等
      parameters:
      - description: 主题库ID过滤
        in: query
        name: thematic_library_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务统计信息
      tags:
      - 主题同步
swagger: "2.0"
