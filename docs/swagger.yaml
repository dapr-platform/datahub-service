basePath: /swagger/datahub-service
definitions:
  controllers.APIResponse:
    properties:
      data: {}
      msg:
        example: 操作成功
        type: string
      status:
        example: 0
        type: integer
    type: object
  controllers.ApproveDataAccessRequestRequest:
    properties:
      approved:
        type: boolean
      comment:
        type: string
    type: object
  controllers.BatchDeleteRequest:
    properties:
      task_ids:
        items:
          type: string
        type: array
    required:
    - task_ids
    type: object
  controllers.BroadcastEventRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      event_type:
        example: system_notification
        type: string
    type: object
  controllers.CreateApiApplicationRequest:
    properties:
      app_secret:
        type: string
      contact_email:
        type: string
      contact_person:
        type: string
      description:
        type: string
      name:
        type: string
    required:
    - app_secret
    - contact_email
    - contact_person
    - name
    type: object
  controllers.DataSourceTestRequest:
    properties:
      config:
        additionalProperties: true
        description: 额外测试配置
        type: object
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      test_type:
        description: connection, data_preview
        example: connection
        type: string
    required:
    - data_source_id
    - test_type
    type: object
  controllers.DataSourceTestResponse:
    properties:
      data:
        description: 预览数据
      duration:
        description: 测试耗时（毫秒）
        example: 250
        type: integer
      error:
        description: 错误信息
        example: ""
        type: string
      message:
        example: 连接成功
        type: string
      metadata:
        additionalProperties: true
        description: 元数据信息
        type: object
      success:
        example: true
        type: boolean
      suggestions:
        description: 优化建议
        example:
        - 检查网络连接
        - 验证数据库权限
        items:
          type: string
        type: array
      test_type:
        example: connection
        type: string
    type: object
  controllers.HealthResponse:
    properties:
      service:
        example: datahub-service
        type: string
      status:
        example: ok
        type: string
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  controllers.InterfaceTestRequest:
    properties:
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      options:
        additionalProperties: true
        description: 测试选项
        type: object
      parameters:
        additionalProperties: true
        description: 测试参数
        type: object
      test_type:
        description: data_fetch, performance, validation
        example: data_fetch
        type: string
    required:
    - interface_id
    - test_type
    type: object
  controllers.InterfaceTestResponse:
    properties:
      column_count:
        description: 字段数
        example: 8
        type: integer
      data:
        description: 返回数据
      data_types:
        additionalProperties:
          type: string
        description: 字段类型
        type: object
      duration:
        description: 调用耗时（毫秒）
        example: 150
        type: integer
      error:
        description: 错误信息
        example: ""
        type: string
      message:
        example: 接口调用成功
        type: string
      performance:
        additionalProperties: true
        description: 性能指标
        type: object
      row_count:
        description: 数据行数
        example: 25
        type: integer
      success:
        example: true
        type: boolean
      test_type:
        example: data_fetch
        type: string
      validation:
        additionalProperties: true
        description: 数据验证结果
        type: object
      warnings:
        description: 警告信息
        example:
        - 数据量较大，建议分页查询
        items:
          type: string
        type: array
    type: object
  controllers.PaginatedResponse:
    properties:
      data: {}
      msg:
        example: 操作成功
        type: string
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      status:
        example: 0
        type: integer
      total:
        example: 100
        type: integer
    type: object
  controllers.SendEventRequest:
    properties:
      data:
        additionalProperties: true
        type: object
      event_type:
        example: system_notification
        type: string
      user_name:
        example: admin
        type: string
    type: object
  controllers.SyncTaskCreateRequest:
    properties:
      config:
        additionalProperties: true
        type: object
      created_by:
        example: admin
        type: string
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      library_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      library_type:
        example: basic_library
        type: string
      task_type:
        example: full_sync
        type: string
    required:
    - data_source_id
    - library_id
    - library_type
    - task_type
    type: object
  controllers.SyncTaskUpdateRequest:
    properties:
      config:
        additionalProperties: true
        type: object
      updated_by:
        example: admin
        type: string
    type: object
  controllers.UpdateBasicLibraryRequest:
    properties:
      description:
        example: 存储用户相关数据的基础库
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      name_en:
        example: user_database
        type: string
      name_zh:
        example: 用户数据库
        type: string
      status:
        example: active
        type: string
    required:
    - id
    type: object
  meta.DataInterfaceConfigDefinition:
    properties:
      description:
        type: string
      icon:
        type: string
      id:
        type: string
      meta_config:
        description: 连接配置字段
        items:
          $ref: '#/definitions/meta.DataInterfaceConfigField'
        type: array
      name:
        type: string
      type:
        description: database, messaging, api, file
        type: string
    type: object
  meta.DataInterfaceConfigField:
    properties:
      default_value: {}
      description:
        type: string
      display_name:
        type: string
      group:
        description: 字段分组
        type: string
      help_text:
        description: 帮助文本
        type: string
      map_variable:
        additionalProperties:
          $ref: '#/definitions/meta.DataInterfaceConfigVariable'
        description: 变量
        type: object
      max:
        description: 用于number类型
        type: number
      min:
        description: 用于number类型
        type: number
      name:
        type: string
      options:
        description: 用于select类型
        items:
          type: string
        type: array
      pattern:
        description: 用于string类型的正则验证
        type: string
      placeholder:
        description: 前端显示的占位符
        type: string
      required:
        type: boolean
      type:
        description: string,text, number, boolean, array, map, enum,map_variable
        type: string
    type: object
  meta.DataInterfaceConfigVariable:
    properties:
      auto_increment:
        type: boolean
      db_field:
        description: db_field 类型时，字段名
        type: string
      db_table:
        description: db_field 类型时，表名
        type: string
      description:
        type: string
      increment_step:
        description: number 类型时，步长, timestamp 类型时，格式为 "1s", "1m", "1h", "1d"
        type: string
      init_value:
        type: string
      name:
        type: string
      type:
        description: number,timestamp,db_field
        type: string
    type: object
  meta.DataSourceConfigField:
    properties:
      default_value: {}
      description:
        type: string
      display_name:
        type: string
      group:
        description: 字段分组
        type: string
      help_text:
        description: 帮助文本
        type: string
      max:
        description: 用于number类型
        type: number
      min:
        description: 用于number类型
        type: number
      name:
        type: string
      options:
        description: 用于select类型
        items:
          type: string
        type: array
      pattern:
        description: 用于string类型的正则验证
        type: string
      placeholder:
        description: 前端显示的占位符
        type: string
      required:
        type: boolean
      type:
        description: string, number, boolean, array, object
        type: string
    type: object
  meta.DataSourceExample:
    properties:
      connection_config:
        additionalProperties: true
        type: object
      description:
        type: string
      name:
        type: string
      params_config:
        additionalProperties: true
        type: object
    type: object
  meta.DataSourceTypeDefinition:
    properties:
      category:
        type: string
      description:
        type: string
      documentation:
        type: string
      examples:
        items:
          $ref: '#/definitions/meta.DataSourceExample'
        type: array
      icon:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      meta_config:
        description: 连接配置字段
        items:
          $ref: '#/definitions/meta.DataSourceConfigField'
        type: array
      name:
        type: string
      params_config:
        description: 参数配置字段
        items:
          $ref: '#/definitions/meta.DataSourceConfigField'
        type: array
      supported_features:
        items:
          type: string
        type: array
      type:
        description: database, messaging, api, file
        type: string
      validation_rules:
        items:
          $ref: '#/definitions/meta.DataSourceValidationRule'
        type: array
    type: object
  meta.DataSourceValidationRule:
    properties:
      condition:
        additionalProperties: true
        type: object
      field:
        type: string
      level:
        description: error, warning
        type: string
      message:
        type: string
      name:
        type: string
      type:
        description: required, format, range, custom
        type: string
    type: object
  meta.SyncTaskScheduleConfigField:
    properties:
      default_value: {}
      description:
        type: string
      display_name:
        type: string
      name:
        type: string
      required:
        type: boolean
      type:
        type: string
    type: object
  meta.SyncTaskScheduleDefinition:
    properties:
      schedule_config_fields:
        additionalProperties:
          $ref: '#/definitions/meta.SyncTaskScheduleConfigField'
        type: object
      schedule_type:
        type: string
    type: object
  meta.ThematicLibraryAccessLevel:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryCategory:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  meta.ThematicLibraryDomain:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.Alert:
    properties:
      annotations:
        additionalProperties:
          type: string
        description: 注解
        type: object
      condition:
        description: 触发条件
        type: string
      description:
        description: 告警描述
        type: string
      ends_at:
        description: 结束时间
        type: string
      evaluation_info:
        additionalProperties: true
        description: 评估信息
        type: object
      id:
        type: string
      labels:
        additionalProperties:
          type: string
        description: 标签
        type: object
      last_evaluated:
        description: 最后评估时间
        type: string
      metric_name:
        description: 指标名称
        type: string
      notifications_sent:
        description: 已发送通知数
        type: integer
      rule_name:
        description: 告警规则名称
        type: string
      severity:
        description: info, warning, error, critical
        type: string
      starts_at:
        description: 开始时间
        type: string
      status:
        description: firing, resolved
        type: string
      threshold:
        description: 阈值
        type: number
      value:
        description: 触发值
        type: number
    type: object
  models.AlertInstance:
    properties:
      alert_rule:
        allOf:
        - $ref: '#/definitions/models.AlertRule'
        description: 关联关系
      annotations:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 注解
      created_at:
        type: string
      ends_at:
        description: 告警结束时间
        type: string
      fingerprint:
        description: 指纹（用于去重）
        type: string
      id:
        type: string
      labels:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 标签
      notifications:
        items:
          $ref: '#/definitions/models.AlertNotification'
        type: array
      rule_id:
        description: 告警规则ID
        type: string
      starts_at:
        description: 告警开始时间
        type: string
      status:
        description: 状态：firing, resolved, suppressed
        type: string
      updated_at:
        type: string
      value:
        description: 触发值
        type: number
    type: object
  models.AlertNotification:
    properties:
      alert_instance:
        allOf:
        - $ref: '#/definitions/models.AlertInstance'
        description: 关联关系
      alert_instance_id:
        description: 告警实例ID
        type: string
      channel:
        description: 通知渠道：email, sms, webhook, slack, dingtalk
        type: string
      content:
        description: 内容
        type: string
      created_at:
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        type: string
      recipient:
        description: 接收者
        type: string
      retry_count:
        description: 重试次数
        type: integer
      sent_at:
        description: 发送时间
        type: string
      status:
        description: 状态：pending, sent, failed, retrying
        type: string
      subject:
        description: 主题
        type: string
      updated_at:
        type: string
    type: object
  models.AlertRule:
    properties:
      alert_instances:
        description: 关联关系
        items:
          $ref: '#/definitions/models.AlertInstance'
        type: array
      condition:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 告警条件
      created_at:
        type: string
      created_by:
        type: string
      description:
        description: 规则描述
        type: string
      evaluation_window:
        description: 评估窗口（秒）
        type: integer
      id:
        type: string
      is_enabled:
        description: 是否启用
        type: boolean
      last_triggered:
        description: 最后触发时间
        type: string
      metric_name:
        description: 监控指标名称
        type: string
      name:
        description: 规则名称
        type: string
      notification_channels:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 通知渠道
      operator:
        description: 操作符：>, <, >=, <=, ==, !=
        type: string
      severity:
        description: 严重级别：info, warning, error, critical
        type: string
      threshold:
        description: 阈值
        type: number
      trigger_count:
        description: 触发次数
        type: integer
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.ApiApplication:
    properties:
      app_key:
        type: string
      app_secret_hash:
        type: string
      contact_email:
        type: string
      contact_person:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      status:
        description: active/inactive
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.ApiRateLimit:
    properties:
      api_path:
        type: string
      application:
        $ref: '#/definitions/models.ApiApplication'
      application_id:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_enabled:
        type: boolean
      max_requests:
        description: 最大请求数
        type: integer
      time_window:
        description: 时间窗口，单位秒
        type: integer
    type: object
  models.ApiUsageLog:
    properties:
      api_path:
        type: string
      application:
        $ref: '#/definitions/models.ApiApplication'
      application_id:
        type: string
      created_by:
        type: string
      error_message:
        type: string
      id:
        type: string
      method:
        type: string
      request_ip:
        type: string
      request_size:
        type: integer
      request_time:
        type: string
      response_size:
        type: integer
      response_time:
        description: 响应时间，毫秒
        type: integer
      status_code:
        type: integer
      user_agent:
        type: string
      user_id:
        type: string
      user_name:
        type: string
    type: object
  models.BasicLibrary:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      data_sources:
        items:
          $ref: '#/definitions/models.DataSource'
        type: array
      description:
        example: 存储用户基础信息的数据库
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interfaces:
        description: 关联关系
        items:
          $ref: '#/definitions/models.DataInterface'
        type: array
      name_en:
        example: user_basic_library
        type: string
      name_zh:
        example: 用户数据基础库
        type: string
      status:
        example: active
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.CleansingRule:
    properties:
      config:
        additionalProperties: true
        type: object
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      interface_id:
        type: string
      is_enabled:
        type: boolean
      order_num:
        type: integer
      type:
        type: string
    type: object
  models.DataAccessRequest:
    properties:
      access_permission:
        description: read/write
        type: string
      approval_comment:
        type: string
      approved_at:
        type: string
      approver_id:
        type: string
      approver_name:
        type: string
      created_by:
        type: string
      id:
        type: string
      request_reason:
        type: string
      requested_at:
        type: string
      requester_id:
        type: string
      requester_name:
        type: string
      resource_id:
        type: string
      resource_type:
        description: thematic_library/basic_library/interface
        type: string
      status:
        description: pending/approved/rejected/expired
        type: string
      valid_until:
        type: string
    type: object
  models.DataCleansingRuleEngine:
    properties:
      backup_original:
        description: 是否备份原始数据
        type: boolean
      cleansing_action:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 清洗动作配置
      created_at:
        type: string
      created_by:
        type: string
      deleted_at:
        type: string
      description:
        type: string
      error_handling:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 错误处理策略
      execution_order:
        description: 执行顺序
        type: integer
      failure_count:
        type: integer
      id:
        type: string
      is_enabled:
        type: boolean
      last_executed:
        type: string
      name:
        type: string
      post_condition:
        description: 后置条件
        type: string
      pre_condition:
        description: 前置条件
        type: string
      priority:
        description: 优先级 (1-100)
        type: integer
      rule_type:
        description: standardization, deduplication, validation, transformation, enrichment
        type: string
      success_count:
        type: integer
      target_column:
        type: string
      target_table:
        type: string
      trigger_condition:
        description: 触发条件
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      validation_rules:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 验证规则
    type: object
  models.DataInterface:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 关联关系
      clean_rules:
        items:
          $ref: '#/definitions/models.CleansingRule'
        type: array
      created_at:
        type: string
      created_by:
        type: string
      data_source:
        $ref: '#/definitions/models.DataSource'
      data_source_id:
        type: string
      description:
        type: string
      id:
        type: string
      interface_config:
        $ref: '#/definitions/models.JSONB'
      is_table_created:
        type: boolean
      library_id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      parse_config:
        $ref: '#/definitions/models.JSONB'
      status:
        type: string
      table_fields_config:
        $ref: '#/definitions/models.JSONB'
      type:
        description: realtime, batch
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataMaskingRule:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      creator_id:
        type: string
      creator_name:
        type: string
      data_source:
        type: string
      data_table:
        type: string
      field_name:
        type: string
      field_type:
        type: string
      id:
        type: string
      is_enabled:
        type: boolean
      masking_config:
        additionalProperties: true
        type: object
      masking_type:
        description: mask/replace/encrypt/pseudonymize
        type: string
      name:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataQualityReport:
    properties:
      created_by:
        type: string
      generated_at:
        type: string
      generated_by:
        type: string
      generator_name:
        type: string
      id:
        type: string
      issues:
        additionalProperties: true
        type: object
      quality_metrics:
        additionalProperties: true
        type: object
      quality_score:
        type: number
      recommendations:
        additionalProperties: true
        type: object
      related_object_id:
        type: string
      related_object_type:
        type: string
      report_name:
        type: string
    type: object
  models.DataSource:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 关联关系
      category:
        description: stream, http, db, file
        type: string
      connection_config:
        $ref: '#/definitions/models.JSONB'
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      library_id:
        type: string
      name:
        type: string
      params_config:
        $ref: '#/definitions/models.JSONB'
      script:
        description: 动态执行脚本，用于特殊认证处理
        type: string
      script_enabled:
        description: 是否启用脚本执行
        type: boolean
      type:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataSubscription:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      filter_condition:
        additionalProperties: true
        type: object
      id:
        type: string
      notification_config:
        additionalProperties: true
        type: object
      notification_method:
        description: webhook/message_queue/email
        type: string
      resource_id:
        type: string
      resource_type:
        description: thematic_interface/basic_interface
        type: string
      status:
        description: active/paused/terminated
        type: string
      subscriber_id:
        type: string
      subscriber_type:
        description: user/application
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.DataSyncLog:
    properties:
      created_by:
        type: string
      details:
        additionalProperties: true
        type: object
      end_time:
        type: string
      error_message:
        type: string
      id:
        type: string
      records_error:
        type: integer
      records_sync:
        type: integer
      records_total:
        type: integer
      start_time:
        type: string
      status:
        description: running/success/failure
        type: string
      task:
        $ref: '#/definitions/models.DataSyncTask'
      task_id:
        type: string
    type: object
  models.DataSyncTask:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      creator_name:
        type: string
      id:
        type: string
      last_sync_time:
        type: string
      name:
        type: string
      next_sync_time:
        type: string
      schedule_config:
        additionalProperties: true
        type: object
      source_config:
        additionalProperties: true
        type: object
      source_type:
        description: database/api/file
        type: string
      status:
        description: active/inactive/error
        type: string
      sync_strategy:
        description: full/incremental
        type: string
      target_config:
        additionalProperties: true
        type: object
      target_type:
        description: database/api/file
        type: string
      transform_rules:
        additionalProperties: true
        type: object
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.HealthCheck:
    properties:
      config:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 检查配置
      created_at:
        type: string
      created_by:
        type: string
      failure_count:
        description: 连续失败次数
        type: integer
      health_check_results:
        description: 关联关系
        items:
          $ref: '#/definitions/models.HealthCheckResult'
        type: array
      id:
        type: string
      interval:
        description: 检查间隔（秒）
        type: integer
      is_enabled:
        description: 是否启用
        type: boolean
      last_check_time:
        description: 最后检查时间
        type: string
      last_status:
        description: 最后状态：healthy, unhealthy, unknown
        type: string
      name:
        description: 检查名称
        type: string
      target:
        description: 检查目标
        type: string
      timeout:
        description: 超时时间（秒）
        type: integer
      type:
        description: 检查类型：http, tcp, database, service
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.HealthCheckResult:
    properties:
      checked_at:
        description: 检查时间
        type: string
      checker_name:
        description: 检查器名称
        type: string
      consecutive_failures:
        description: 连续失败次数
        type: integer
      consecutive_successes:
        description: 连续成功次数
        type: integer
      details:
        description: 详细信息
        type: string
      error:
        description: 错误信息
        type: string
      last_failure:
        description: 最后失败时间
        type: string
      last_success:
        description: 最后成功时间
        type: string
      message:
        description: 状态消息
        type: string
      metadata:
        additionalProperties: true
        description: 元数据
        type: object
      response_time:
        description: 响应时间
        type: integer
      status:
        description: '状态: healthy, unhealthy, unknown'
        type: string
      status_code:
        description: 状态码
        type: integer
      target:
        description: 检查目标
        type: string
    type: object
  models.JSONB:
    additionalProperties: true
    type: object
  models.Metadata:
    properties:
      content:
        additionalProperties: true
        type: object
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      name:
        type: string
      related_object_id:
        type: string
      related_object_type:
        description: basic_library/data_interface/thematic_library等
        type: string
      type:
        description: technical/business/management
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.PerformanceSnapshot:
    properties:
      alerts_summary:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 告警摘要
      created_at:
        type: string
      end_time:
        description: 结束时间
        type: string
      health_summary:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 健康状况摘要
      id:
        type: string
      metrics_summary:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 指标摘要
      recommendations:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 建议
      snapshot_type:
        description: 快照类型：hourly, daily, weekly
        type: string
      start_time:
        description: 开始时间
        type: string
      top_issues:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 主要问题
      trend_data:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 趋势数据
    type: object
  models.QualityCheckExecution:
    properties:
      check_results:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 检查结果详情
      check_type:
        description: batch, realtime, manual
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      duration:
        description: 检查时长，毫秒
        type: integer
      end_time:
        type: string
      error_message:
        type: string
      execution_id:
        type: string
      failed_records:
        type: integer
      fixed_actions:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 修复动作记录
      fixed_records:
        description: 自动修复记录数
        type: integer
      id:
        type: string
      passed_records:
        type: integer
      quality_rule_id:
        type: string
      quality_score:
        description: 质量评分 (0-1)
        type: number
      recommendations:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 改进建议
      sample_data:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 样本数据
      start_time:
        type: string
      status:
        description: running, passed, failed, warning
        type: string
      sync_config_id:
        type: string
      threshold_met:
        description: 是否达到阈值
        type: boolean
      total_records:
        type: integer
      updated_at:
        type: string
    type: object
  models.QualityDashboardReport:
    properties:
      accuracy_score:
        type: number
      completeness_score:
        type: number
      consistency_score:
        type: number
      created_at:
        type: string
      critical_issues:
        type: integer
      deleted_at:
        type: string
      end_date:
        type: string
      generated_by:
        type: string
      high_issues:
        type: integer
      id:
        type: string
      low_issues:
        type: integer
      medium_issues:
        type: integer
      overall_quality_score:
        type: number
      published_at:
        type: string
      recommendations:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 改进建议
      report_data:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 报告详细数据
      report_name:
        type: string
      report_period:
        type: string
      report_type:
        description: daily, weekly, monthly, ad_hoc
        type: string
      reviewed_at:
        type: string
      reviewed_by:
        type: string
      start_date:
        type: string
      status:
        description: draft, published, archived
        type: string
      timeliness_score:
        type: number
      total_issues_found:
        type: integer
      total_records_checked:
        type: integer
      total_rules_executed:
        type: integer
      total_tables_checked:
        type: integer
      trend_analysis:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 趋势分析
      uniqueness_score:
        type: number
      updated_at:
        type: string
      validity_score:
        type: number
    type: object
  models.QualityIssueTracker:
    properties:
      actual_value:
        type: string
      assigned_to:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      detection_time:
        type: string
      expected_value:
        type: string
      id:
        type: string
      issue_context:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 问题上下文
      issue_description:
        type: string
      issue_type:
        type: string
      quality_check_id:
        type: string
      quality_rule_id:
        type: string
      record_identifier:
        description: 记录标识符
        type: string
      reopen_count:
        type: integer
      resolution_action:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 解决动作
      resolution_note:
        type: string
      resolved_at:
        type: string
      resolved_by:
        type: string
      severity:
        description: low, medium, high, critical
        type: string
      status:
        description: open, investigating, resolved, ignored, false_positive
        type: string
      tags:
        $ref: '#/definitions/models.JSONB'
      target_column:
        type: string
      target_table:
        type: string
      updated_at:
        type: string
    type: object
  models.QualityMetricRecord:
    properties:
      baseline_value:
        description: 基线值
        type: number
      calculation_time:
        type: string
      created_at:
        type: string
      data_source:
        type: string
      deleted_at:
        type: string
      duplicate_count:
        type: integer
      id:
        type: string
      invalid_count:
        type: integer
      metric_date:
        type: string
      metric_details:
        allOf:
        - $ref: '#/definitions/models.JSONB'
        description: 指标详细信息
      metric_name:
        type: string
      metric_type:
        description: completeness, accuracy, consistency, validity, uniqueness, timeliness
        type: string
      metric_value:
        description: 指标值
        type: number
      null_count:
        type: integer
      outlier_count:
        type: integer
      target_column:
        type: string
      target_table:
        type: string
      target_value:
        description: 目标值
        type: number
      total_count:
        type: integer
      trend:
        description: improving, stable, declining
        type: string
      updated_at:
        type: string
      valid_count:
        type: integer
    type: object
  models.QualityRule:
    properties:
      config:
        additionalProperties: true
        type: object
      created_at:
        type: string
      created_by:
        type: string
      id:
        type: string
      is_enabled:
        type: boolean
      name:
        type: string
      related_object_id:
        type: string
      related_object_type:
        description: interface/thematic_interface
        type: string
      type:
        description: completeness/standardization/consistency/accuracy/uniqueness/timeliness
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.SyncProgress:
    properties:
      current_phase:
        type: string
      error_count:
        type: integer
      estimated_time:
        type: string
      processed_rows:
        type: integer
      progress_percent:
        type: integer
      speed:
        description: 每秒处理行数
        type: integer
      total_rows:
        type: integer
      updated_at:
        type: string
    type: object
  models.SyncResult:
    properties:
      duration_ms:
        description: 毫秒数，便于JSON序列化
        type: integer
      end_time:
        type: string
      error_message:
        type: string
      error_rows:
        type: integer
      metadata:
        additionalProperties: true
        type: object
      processed_rows:
        type: integer
      start_time:
        type: string
      statistics:
        additionalProperties: true
        type: object
      status:
        $ref: '#/definitions/models.TaskStatus'
      success_rows:
        type: integer
      task_id:
        type: string
    type: object
  models.SyncTask:
    properties:
      basic_library:
        allOf:
        - $ref: '#/definitions/models.BasicLibrary'
        description: 动态关联 - 这些字段不存储在数据库中，在运行时根据LibraryType动态加载
      config:
        additionalProperties: true
        description: 同步配置
        type: object
      created_at:
        type: string
      created_by:
        example: system
        type: string
      data_interface:
        $ref: '#/definitions/models.DataInterface'
      data_source:
        $ref: '#/definitions/models.DataSource'
      data_source_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      end_time:
        type: string
      error_count:
        example: 0
        type: integer
      error_message:
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      library_id:
        description: 基础库ID或主题库ID
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      library_type:
        description: basic_library, thematic_library
        example: basic_library
        type: string
      processed_rows:
        example: 0
        type: integer
      progress:
        description: 进度百分比 0-100
        example: 0
        type: integer
      result:
        additionalProperties: true
        description: 同步结果
        type: object
      start_time:
        type: string
      status:
        description: pending, running, success, failed, cancelled
        example: pending
        type: string
      task_type:
        description: full_sync, incremental_sync, realtime_sync
        example: full_sync
        type: string
      thematic_library:
        $ref: '#/definitions/models.ThematicLibrary'
      total_rows:
        example: 0
        type: integer
      updated_at:
        type: string
    type: object
  models.SystemLog:
    properties:
      created_by:
        type: string
      id:
        type: string
      object_id:
        type: string
      object_type:
        description: basic_library/thematic_library/interface/user等
        type: string
      operation_content:
        additionalProperties: true
        type: object
      operation_result:
        description: success/failure
        type: string
      operation_time:
        type: string
      operation_type:
        description: create/update/delete/query等
        type: string
      operator_id:
        type: string
      operator_ip:
        type: string
      operator_name:
        type: string
    type: object
  models.SystemMetrics:
    properties:
      active_sessions:
        description: 活跃会话数
        type: integer
      connection_count:
        description: 连接数
        type: integer
      cpu_usage:
        description: CPU使用率
        type: number
      created_at:
        type: string
      database_connections:
        description: 数据库连接数
        type: integer
      disk_usage:
        description: 磁盘使用率
        type: number
      error_rate:
        description: 错误率
        type: number
      host_name:
        description: 主机名
        type: string
      id:
        type: string
      load_average:
        description: 负载平均值
        type: number
      memory_usage:
        description: 内存使用率
        type: number
      network_in:
        description: 网络入流量（字节）
        type: integer
      network_out:
        description: 网络出流量（字节）
        type: integer
      process_count:
        description: 进程数
        type: integer
      queue_length:
        description: 队列长度
        type: integer
      response_time:
        description: 平均响应时间
        type: number
      timestamp:
        description: 时间戳
        type: string
    type: object
  models.TableField:
    properties:
      check_constraint:
        type: string
      data_type:
        type: string
      default_value:
        type: string
      description:
        type: string
      is_nullable:
        type: boolean
      is_primary_key:
        type: boolean
      is_unique:
        type: boolean
      name_en:
        type: string
      name_zh:
        type: string
      order_num:
        type: integer
    type: object
  models.TableSchemaRequest:
    properties:
      fields:
        items:
          $ref: '#/definitions/models.TableField'
        type: array
      interface_id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      operation:
        description: create_table, alter_table, drop_table
        example: create_table
        type: string
      schema_name:
        example: user_basic_library
        type: string
      table_name:
        example: users
        type: string
    required:
    - interface_id
    - operation
    - schema_name
    - table_name
    type: object
  models.TaskStatus:
    enum:
    - pending
    - running
    - success
    - failed
    - cancelled
    - paused
    type: string
    x-enum-varnames:
    - TaskStatusPending
    - TaskStatusRunning
    - TaskStatusSuccess
    - TaskStatusFailed
    - TaskStatusCancelled
    - TaskStatusPaused
  models.ThematicInterface:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      id:
        type: string
      interface_config:
        $ref: '#/definitions/models.JSONB'
      is_table_created:
        type: boolean
      library_id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      parse_config:
        $ref: '#/definitions/models.JSONB'
      status:
        type: string
      table_fields_config:
        $ref: '#/definitions/models.JSONB'
      thematic_library:
        allOf:
        - $ref: '#/definitions/models.ThematicLibrary'
        description: 关联关系
      type:
        description: realtime, batch
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.ThematicLibrary:
    properties:
      access_level:
        description: public, internal, private
        type: string
      authorized_roles:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      authorized_users:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      category:
        description: business, technical, analysis, report
        type: string
      created_at:
        type: string
      created_by:
        type: string
      description:
        type: string
      domain:
        description: user, order, product, finance, marketing
        type: string
      id:
        type: string
      name_en:
        type: string
      name_zh:
        type: string
      publish_status:
        description: draft, published, archived
        type: string
      retention_period:
        type: integer
      source_libraries:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      status:
        type: string
      tags:
        items:
          $ref: '#/definitions/models.JSONB'
        type: array
      update_frequency:
        description: realtime, hourly, daily, weekly, monthly
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      version:
        type: string
    type: object
  service.BatchDeleteResponse:
    properties:
      deleted_count:
        type: integer
      errors:
        items:
          type: string
        type: array
      failed_ids:
        items:
          type: string
        type: array
    type: object
  service.PaginationInfo:
    properties:
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  service.SyncTaskListResponse:
    properties:
      pagination:
        $ref: '#/definitions/service.PaginationInfo'
      tasks:
        items:
          $ref: '#/definitions/models.SyncTask'
        type: array
    type: object
  service.SyncTaskStatistics:
    properties:
      cancelled_tasks:
        type: integer
      failed_tasks:
        type: integer
      pending_tasks:
        type: integer
      running_tasks:
        type: integer
      success_rate:
        type: number
      success_tasks:
        type: integer
      total_tasks:
        type: integer
    type: object
  service.SyncTaskStatusResponse:
    properties:
      error:
        type: string
      processor:
        type: string
      progress:
        $ref: '#/definitions/models.SyncProgress'
      result:
        $ref: '#/definitions/models.SyncResult'
      start_time:
        type: string
      status:
        type: string
      task:
        $ref: '#/definitions/models.SyncTask'
    type: object
info:
  contact: {}
  description: 智慧园区数据底座后台服务，提供数据采集、处理、存储、治理和共享功能
  title: 数据底座服务 API
  version: "1.0"
paths:
  /api/monitoring/alerts:
    get:
      consumes:
      - application/json
      description: 分页获取告警记录，支持按严重级别、状态等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 严重级别
        enum:
        - info
        - warning
        - error
        - critical
        in: query
        name: severity
        type: string
      - description: 告警状态
        enum:
        - active
        - resolved
        - suppressed
        in: query
        name: status
        type: string
      - description: 开始时间
        format: datetime
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: datetime
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Alert'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取告警记录列表
      tags:
      - 告警管理
  /api/monitoring/alerts/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定告警ID的详细信息
      parameters:
      - description: 告警ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Alert'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取告警详情
      tags:
      - 告警管理
  /api/monitoring/alerts/{id}/acknowledge:
    post:
      consumes:
      - application/json
      description: 确认告警并记录处理信息
      parameters:
      - description: 告警ID
        in: path
        name: id
        required: true
        type: string
      - description: 确认信息
        in: body
        name: acknowledgment
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 确认告警
      tags:
      - 告警管理
  /api/monitoring/alerts/{id}/resolve:
    post:
      consumes:
      - application/json
      description: 标记告警为已解决
      parameters:
      - description: 告警ID
        in: path
        name: id
        required: true
        type: string
      - description: 解决方案信息
        in: body
        name: resolution
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 解决告警
      tags:
      - 告警管理
  /api/monitoring/alerts/rules:
    get:
      consumes:
      - application/json
      description: 分页获取告警规则列表，支持按状态、类型等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - threshold
        - anomaly
        - custom
        in: query
        name: rule_type
        type: string
      - description: 是否启用
        in: query
        name: is_enabled
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.AlertRule'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取告警规则列表
      tags:
      - 告警管理
    post:
      consumes:
      - application/json
      description: 创建新的监控告警规则
      parameters:
      - description: 告警规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.AlertRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AlertRule'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建告警规则
      tags:
      - 告警管理
  /api/monitoring/alerts/rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的告警规则（软删除）
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除告警规则
      tags:
      - 告警管理
    put:
      consumes:
      - application/json
      description: 更新指定的告警规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 告警规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.AlertRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AlertRule'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新告警规则
      tags:
      - 告警管理
  /api/monitoring/dashboard:
    get:
      consumes:
      - application/json
      description: 获取监控仪表板的综合数据，包括关键指标和图表数据
      parameters:
      - default: 24h
        description: 时间范围
        enum:
        - 1h
        - 6h
        - 24h
        - 7d
        - 30d
        in: query
        name: time_range
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取监控仪表板数据
      tags:
      - 监控仪表板
  /api/monitoring/health:
    get:
      consumes:
      - application/json
      description: 获取系统整体健康状态和各组件状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.HealthCheck'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取系统健康状态
      tags:
      - 健康检查
  /api/monitoring/health/checks:
    get:
      consumes:
      - application/json
      description: 分页获取健康检查历史记录
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 组件名称
        in: query
        name: component
        type: string
      - description: 状态筛选
        enum:
        - healthy
        - warning
        - error
        in: query
        name: status
        type: string
      - description: 开始时间
        format: datetime
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: datetime
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.HealthCheck'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取健康检查记录列表
      tags:
      - 健康检查
  /api/monitoring/performance/metrics:
    get:
      consumes:
      - application/json
      description: 获取应用程序性能指标，包括响应时间、吞吐量等
      parameters:
      - description: 开始时间
        format: datetime
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: datetime
        in: query
        name: end_time
        type: string
      - description: 服务名称
        in: query
        name: service_name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PerformanceSnapshot'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取性能监控指标
      tags:
      - 性能监控
  /api/monitoring/reports/performance:
    post:
      consumes:
      - application/json
      description: 生成指定时间范围的系统性能分析报告
      parameters:
      - description: 报告类型
        enum:
        - hourly
        - daily
        - weekly
        - monthly
        in: query
        name: report_type
        required: true
        type: string
      - description: 开始日期
        format: date
        in: query
        name: start_date
        required: true
        type: string
      - description: 结束日期
        format: date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 生成性能分析报告
      tags:
      - 性能报告
  /api/monitoring/services/status:
    get:
      consumes:
      - application/json
      description: 获取各个服务组件的运行状态和依赖关系
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    type: object
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取服务运行状态
      tags:
      - 服务监控
  /api/monitoring/system/metrics:
    get:
      consumes:
      - application/json
      description: 获取系统性能指标，包括CPU、内存、磁盘等使用情况
      parameters:
      - description: 开始时间
        format: datetime
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: datetime
        in: query
        name: end_time
        type: string
      - description: 指标类型
        enum:
        - cpu
        - memory
        - disk
        - network
        in: query
        name: metric_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.SystemMetrics'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取系统监控指标
      tags:
      - 系统监控
  /api/quality/checks:
    get:
      consumes:
      - application/json
      description: 分页获取质量检查执行记录
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 规则ID
        in: query
        name: rule_id
        type: string
      - description: 状态筛选
        enum:
        - running
        - passed
        - failed
        - warning
        in: query
        name: status
        type: string
      - description: 开始时间
        format: datetime
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: datetime
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityCheckExecution'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取质量检查记录列表
      tags:
      - 数据质量
  /api/quality/checks/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定检查ID的质量检查详细信息
      parameters:
      - description: 检查ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityCheckExecution'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取质量检查详情
      tags:
      - 数据质量
  /api/quality/cleansing-rules:
    get:
      consumes:
      - application/json
      description: 分页获取清洗规则列表，支持按类型、状态等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 规则类型
        enum:
        - standardization
        - deduplication
        - validation
        - transformation
        - enrichment
        in: query
        name: rule_type
        type: string
      - description: 是否启用
        in: query
        name: is_enabled
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataCleansingRuleEngine'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据清洗规则列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据清洗规则
      parameters:
      - description: 清洗规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.DataCleansingRuleEngine'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataCleansingRuleEngine'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据清洗规则
      tags:
      - 数据质量
  /api/quality/cleansing-rules/{id}/execute:
    post:
      consumes:
      - application/json
      description: 对指定规则执行数据清洗
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行数据清洗规则
      tags:
      - 数据质量
  /api/quality/issues:
    get:
      consumes:
      - application/json
      description: 分页获取质量问题追踪列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 严重程度
        enum:
        - low
        - medium
        - high
        - critical
        in: query
        name: severity
        type: string
      - description: 状态筛选
        enum:
        - open
        - investigating
        - resolved
        - ignored
        - false_positive
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityIssueTracker'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量问题列表
      tags:
      - 数据质量
  /api/quality/issues/{id}/resolve:
    post:
      consumes:
      - application/json
      description: 标记质量问题为已解决并记录解决方案
      parameters:
      - description: 问题ID
        in: path
        name: id
        required: true
        type: string
      - description: 解决方案信息
        in: body
        name: resolution
        required: true
        schema:
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 解决数据质量问题
      tags:
      - 数据质量
  /api/quality/metrics:
    get:
      consumes:
      - application/json
      description: 获取指定时间范围内的数据质量指标
      parameters:
      - description: 表名
        in: query
        name: table_name
        type: string
      - description: 指标类型
        enum:
        - completeness
        - accuracy
        - consistency
        - validity
        - uniqueness
        - timeliness
        in: query
        name: metric_type
        type: string
      - description: 开始日期
        format: date
        in: query
        name: start_date
        type: string
      - description: 结束日期
        format: date
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityMetricRecord'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量指标
      tags:
      - 数据质量
  /api/quality/reports:
    get:
      consumes:
      - application/json
      description: 分页获取质量报告列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 报告类型
        enum:
        - daily
        - weekly
        - monthly
        - ad_hoc
        in: query
        name: report_type
        type: string
      - description: 状态筛选
        enum:
        - draft
        - published
        - archived
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityDashboardReport'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量报告列表
      tags:
      - 数据质量
  /api/quality/reports/{id}:
    get:
      consumes:
      - application/json
      description: 获取指定报告ID的质量报告详细信息
      parameters:
      - description: 报告ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityDashboardReport'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取质量报告详情
      tags:
      - 数据质量
  /api/quality/reports/generate:
    post:
      consumes:
      - application/json
      description: 生成指定时间范围的数据质量报告
      parameters:
      - description: 报告类型
        enum:
        - daily
        - weekly
        - monthly
        - ad_hoc
        in: query
        name: report_type
        required: true
        type: string
      - description: 开始日期
        format: date
        in: query
        name: start_date
        required: true
        type: string
      - description: 结束日期
        format: date
        in: query
        name: end_date
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityDashboardReport'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 生成数据质量报告
      tags:
      - 数据质量
  /api/quality/rules:
    get:
      consumes:
      - application/json
      description: 分页获取质量规则列表，支持按类型、状态等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 规则类别
        enum:
        - completeness
        - accuracy
        - consistency
        - validity
        - uniqueness
        in: query
        name: category
        type: string
      - description: 是否启用
        in: query
        name: is_enabled
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityRule'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量规则列表
      tags:
      - 数据质量
    post:
      consumes:
      - application/json
      description: 创建新的数据质量检查规则
      parameters:
      - description: 质量规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.QualityRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityRule'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据质量规则
      tags:
      - 数据质量
  /api/quality/rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据质量规则（软删除）
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据质量规则
      tags:
      - 数据质量
    get:
      consumes:
      - application/json
      description: 根据规则ID获取质量规则的详细信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityRule'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取指定质量规则详情
      tags:
      - 数据质量
    put:
      consumes:
      - application/json
      description: 更新指定的数据质量规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 质量规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.QualityRule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityRule'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据质量规则
      tags:
      - 数据质量
  /api/quality/rules/{id}/execute:
    post:
      consumes:
      - application/json
      description: 对指定规则执行质量检查
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityCheckExecution'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行数据质量检查
      tags:
      - 数据质量
  /basic-libraries/add-basic-library:
    post:
      consumes:
      - application/json
      description: 添加数据基础库
      parameters:
      - description: 数据基础库请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BasicLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据基础库
      tags:
      - 数据基础库
  /basic-libraries/add-datasource:
    post:
      consumes:
      - application/json
      description: 添加数据源
      parameters:
      - description: 数据源请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataSource'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据源
      tags:
      - 数据基础库
  /basic-libraries/add-interface:
    post:
      consumes:
      - application/json
      description: 添加数据接口
      parameters:
      - description: 数据接口请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 添加数据接口
      tags:
      - 数据基础库
  /basic-libraries/datasource-status/{id}:
    get:
      description: 获取数据源的连接状态、最近同步时间等信息
      parameters:
      - description: 数据源ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据源运行状态
      tags:
      - 数据基础库
  /basic-libraries/delete-basic-library:
    post:
      consumes:
      - application/json
      description: 删除数据基础库
      parameters:
      - description: 数据基础库请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.BasicLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据基础库
      tags:
      - 数据基础库
  /basic-libraries/delete-datasource:
    post:
      consumes:
      - application/json
      description: 删除数据源
      parameters:
      - description: 数据源请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataSource'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据源
      tags:
      - 数据基础库
  /basic-libraries/delete-interface:
    post:
      consumes:
      - application/json
      description: 删除数据接口
      parameters:
      - description: 数据接口请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据接口
      tags:
      - 数据基础库
  /basic-libraries/interface-preview/{id}:
    get:
      description: 获取接口的样例数据用于预览
      parameters:
      - description: 接口ID
        in: path
        name: id
        required: true
        type: string
      - default: 10
        description: 数据条数
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 预览接口数据
      tags:
      - 数据基础库
  /basic-libraries/test-datasource:
    post:
      consumes:
      - application/json
      description: 测试数据源连接和数据获取能力
      parameters:
      - description: 测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DataSourceTestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DataSourceTestResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试数据源连接
      tags:
      - 数据基础库
  /basic-libraries/test-interface:
    post:
      consumes:
      - application/json
      description: 测试数据接口的调用和数据获取能力
      parameters:
      - description: 测试请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.InterfaceTestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.InterfaceTestResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 测试接口调用
      tags:
      - 数据基础库
  /basic-libraries/update-basic-library:
    post:
      consumes:
      - application/json
      description: 修改数据基础库信息
      parameters:
      - description: 修改数据基础库请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBasicLibraryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 修改数据基础库
      tags:
      - 数据基础库
  /events/broadcast:
    post:
      consumes:
      - application/json
      description: 向所有连接的用户广播SSE事件
      parameters:
      - description: 广播事件请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.BroadcastEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 广播事件
      tags:
      - 事件管理
  /events/send:
    post:
      consumes:
      - application/json
      description: 向指定用户发送SSE事件
      parameters:
      - description: 发送事件请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.SendEventRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 发送事件
      tags:
      - 事件管理
  /governance/masking-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据脱敏规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 数据源
        in: query
        name: data_source
        type: string
      - description: 脱敏类型
        in: query
        name: masking_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataMaskingRule'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据脱敏规则列表
      tags:
      - 数据治理
    post:
      consumes:
      - application/json
      description: 创建新的数据脱敏规则
      parameters:
      - description: 数据脱敏规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.DataMaskingRule'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataMaskingRule'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据脱敏规则
      tags:
      - 数据治理
  /governance/masking-rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据脱敏规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据脱敏规则
      tags:
      - 数据治理
    get:
      consumes:
      - application/json
      description: 根据ID获取数据脱敏规则详情
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataMaskingRule'
              type: object
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据脱敏规则
      tags:
      - 数据治理
    put:
      consumes:
      - application/json
      description: 更新数据脱敏规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据脱敏规则
      tags:
      - 数据治理
  /governance/metadata:
    get:
      consumes:
      - application/json
      description: 分页获取元数据列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 元数据类型
        in: query
        name: type
        type: string
      - description: 元数据名称
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Metadata'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取元数据列表
      tags:
      - 数据治理
    post:
      consumes:
      - application/json
      description: 创建新的元数据
      parameters:
      - description: 元数据信息
        in: body
        name: metadata
        required: true
        schema:
          $ref: '#/definitions/models.Metadata'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Metadata'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建元数据
      tags:
      - 数据治理
  /governance/metadata/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的元数据
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除元数据
      tags:
      - 数据治理
    get:
      consumes:
      - application/json
      description: 根据ID获取元数据详情
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Metadata'
              type: object
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取元数据
      tags:
      - 数据治理
    put:
      consumes:
      - application/json
      description: 更新元数据信息
      parameters:
      - description: 元数据ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 元数据不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新元数据
      tags:
      - 数据治理
  /governance/quality-check:
    post:
      consumes:
      - application/json
      description: 对指定对象执行数据质量检查并生成报告
      parameters:
      - description: 对象ID
        in: query
        name: object_id
        required: true
        type: string
      - description: 对象类型
        in: query
        name: object_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 检查成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataQualityReport'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 执行数据质量检查
      tags:
      - 数据治理
  /governance/quality-reports:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量报告列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 对象类型
        in: query
        name: object_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataQualityReport'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量报告列表
      tags:
      - 数据治理
  /governance/quality-reports/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取数据质量报告详情
      parameters:
      - description: 报告ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataQualityReport'
              type: object
        "404":
          description: 报告不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据质量报告
      tags:
      - 数据治理
  /governance/quality-rules:
    get:
      consumes:
      - application/json
      description: 分页获取数据质量规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 规则类型
        in: query
        name: type
        type: string
      - description: 关联对象类型
        in: query
        name: object_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.QualityRule'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据质量规则列表
      tags:
      - 数据治理
    post:
      consumes:
      - application/json
      description: 创建新的数据质量规则
      parameters:
      - description: 数据质量规则信息
        in: body
        name: rule
        required: true
        schema:
          $ref: '#/definitions/models.QualityRule'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityRule'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据质量规则
      tags:
      - 数据治理
  /governance/quality-rules/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据质量规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据质量规则
      tags:
      - 数据治理
    get:
      consumes:
      - application/json
      description: 根据ID获取数据质量规则详情
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.QualityRule'
              type: object
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据质量规则
      tags:
      - 数据治理
    put:
      consumes:
      - application/json
      description: 更新数据质量规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据质量规则
      tags:
      - 数据治理
  /governance/system-logs:
    get:
      consumes:
      - application/json
      description: 分页获取系统日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 操作类型
        in: query
        name: operation_type
        type: string
      - description: 对象类型
        in: query
        name: object_type
        type: string
      - description: 开始时间
        in: query
        name: start_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.SystemLog'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取系统日志列表
      tags:
      - 数据治理
  /health:
    get:
      description: 检查服务健康状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 健康检查
      tags:
      - 系统
  /meta/basic-libraries/data-interface-configs:
    get:
      description: 获取所有数据源配置
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.DataInterfaceConfigDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据源配置元数据
      tags:
      - 元数据
  /meta/basic-libraries/data-sources:
    get:
      description: 获取所有数据源类型元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.DataSourceTypeDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据源类型元数据
      tags:
      - 元数据
  /meta/basic-libraries/sync-task-meta:
    get:
      description: 获取所有同步任务相关元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    additionalProperties:
                      type: string
                    type: object
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有同步任务相关元数据
      tags:
      - 元数据
  /meta/basic-libraries/sync-task-types:
    get:
      description: 获取所有同步任务类型元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  additionalProperties:
                    $ref: '#/definitions/meta.SyncTaskScheduleDefinition'
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有同步任务类型元数据
      tags:
      - 元数据
  /meta/thematic-libraries/access-levels:
    get:
      description: 获取所有数据主题库访问级别元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryAccessLevel'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库访问级别元数据
      tags:
      - 元数据
  /meta/thematic-libraries/categories:
    get:
      description: 获取所有数据主题库分类元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryCategory'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库分类元数据
      tags:
      - 元数据
  /meta/thematic-libraries/domains:
    get:
      description: 获取所有数据主题库域元数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/meta.ThematicLibraryDomain'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有数据主题库域元数据
      tags:
      - 元数据
  /ready:
    get:
      description: 检查服务是否就绪
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 就绪检查
      tags:
      - 系统
  /sharing/api-applications:
    get:
      consumes:
      - application/json
      description: 分页获取API应用列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ApiApplication'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API应用列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的API接入应用
      parameters:
      - description: API应用信息
        in: body
        name: app
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateApiApplicationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiApplication'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建API应用
      tags:
      - 数据共享服务
  /sharing/api-applications/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的API应用
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除API应用
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取API应用详情
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiApplication'
              type: object
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取API应用
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新API应用信息
      parameters:
      - description: 应用ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 应用不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API应用
      tags:
      - 数据共享服务
  /sharing/api-rate-limits:
    get:
      consumes:
      - application/json
      description: 分页获取API限流规则列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用ID
        in: query
        name: application_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ApiRateLimit'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API限流规则列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的API限流规则
      parameters:
      - description: API限流规则信息
        in: body
        name: limit
        required: true
        schema:
          $ref: '#/definitions/models.ApiRateLimit'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ApiRateLimit'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建API限流规则
      tags:
      - 数据共享服务
  /sharing/api-rate-limits/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的API限流规则
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除API限流规则
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新API限流规则信息
      parameters:
      - description: 规则ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 规则不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新API限流规则
      tags:
      - 数据共享服务
  /sharing/api-usage-logs:
    get:
      consumes:
      - application/json
      description: 分页获取API使用日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 应用ID
        in: query
        name: application_id
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: string
      - description: 开始时间
        in: query
        name: start_time
        type: string
      - description: 结束时间
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ApiUsageLog'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取API使用日志列表
      tags:
      - 数据共享服务
  /sharing/data-access-requests:
    get:
      consumes:
      - application/json
      description: 分页获取数据使用申请列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 申请人ID
        in: query
        name: requester_id
        type: string
      - description: 资源类型
        in: query
        name: resource_type
        type: string
      - description: 申请状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataAccessRequest'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据使用申请列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的数据使用申请
      parameters:
      - description: 数据使用申请信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DataAccessRequest'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataAccessRequest'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-access-requests/{id}:
    get:
      consumes:
      - application/json
      description: 根据ID获取数据使用申请详情
      parameters:
      - description: 申请ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataAccessRequest'
              type: object
        "404":
          description: 申请不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-access-requests/{id}/approve:
    post:
      consumes:
      - application/json
      description: 审批数据使用申请
      parameters:
      - description: 申请ID
        in: path
        name: id
        required: true
        type: string
      - description: 审批信息
        in: body
        name: approval
        required: true
        schema:
          $ref: '#/definitions/controllers.ApproveDataAccessRequestRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 审批成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 申请不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 审批数据使用申请
      tags:
      - 数据共享服务
  /sharing/data-subscriptions:
    get:
      consumes:
      - application/json
      description: 分页获取数据订阅列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 订阅者ID
        in: query
        name: subscriber_id
        type: string
      - description: 资源类型
        in: query
        name: resource_type
        type: string
      - description: 订阅状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataSubscription'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据订阅列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的数据订阅
      parameters:
      - description: 数据订阅信息
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.DataSubscription'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSubscription'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据订阅
      tags:
      - 数据共享服务
  /sharing/data-subscriptions/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据订阅
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据订阅
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取数据订阅详情
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSubscription'
              type: object
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据订阅
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新数据订阅信息
      parameters:
      - description: 订阅ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 订阅不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据订阅
      tags:
      - 数据共享服务
  /sharing/data-sync-logs:
    get:
      consumes:
      - application/json
      description: 分页获取数据同步日志列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 任务ID
        in: query
        name: task_id
        type: string
      - description: 日志状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataSyncLog'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据同步日志列表
      tags:
      - 数据共享服务
  /sharing/data-sync-tasks:
    get:
      consumes:
      - application/json
      description: 分页获取数据同步任务列表
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 任务状态
        in: query
        name: status
        type: string
      - description: 创建人ID
        in: query
        name: created_by
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DataSyncTask'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据同步任务列表
      tags:
      - 数据共享服务
    post:
      consumes:
      - application/json
      description: 创建新的数据同步任务
      parameters:
      - description: 数据同步任务信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/models.DataSyncTask'
      produces:
      - application/json
      responses:
        "201":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据同步任务
      tags:
      - 数据共享服务
  /sharing/data-sync-tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的数据同步任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据同步任务
      tags:
      - 数据共享服务
    get:
      consumes:
      - application/json
      description: 根据ID获取数据同步任务详情
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DataSyncTask'
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据ID获取数据同步任务
      tags:
      - 数据共享服务
    put:
      consumes:
      - application/json
      description: 更新数据同步任务信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: updates
        required: true
        schema:
          additionalProperties: true
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据同步任务
      tags:
      - 数据共享服务
  /sse/{user_name}:
    get:
      description: 前端页面通过此接口建立SSE连接，接收实时事件推送
      parameters:
      - description: 用户名
        in: path
        name: user_name
        required: true
        type: string
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
      summary: 建立SSE连接
      tags:
      - 事件管理
  /sync/tasks:
    get:
      consumes:
      - application/json
      description: |-
        分页获取同步任务列表，支持多种过滤条件

        **查询参数说明:**
        - page: 页码，默认1
        - size: 每页大小，默认10，最大100
        - library_type: 库类型过滤
        - library_id: 库ID过滤
        - data_source_id: 数据源ID过滤
        - status: 任务状态过滤
        - task_type: 任务类型过滤
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 库类型
        in: query
        name: library_type
        type: string
      - description: 库ID
        in: query
        name: library_id
        type: string
      - description: 数据源ID
        in: query
        name: data_source_id
        type: string
      - description: 任务状态
        in: query
        name: status
        type: string
      - description: 任务类型
        in: query
        name: task_type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.SyncTaskListResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务列表
      tags:
      - 同步任务管理
    post:
      consumes:
      - application/json
      description: |-
        创建新的数据同步任务，支持基础库和主题库

        **支持的库类型:**
        - basic_library: 基础库
        - thematic_library: 主题库

        **支持的任务类型:**
        - full_sync: 全量同步
        - incremental_sync: 增量同步
        - realtime_sync: 实时同步

        **任务状态流转:**
        pending → running → success/failed/cancelled
      parameters:
      - description: 同步任务创建信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.SyncTaskCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建同步任务
      tags:
      - 同步任务管理
  /sync/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的同步任务，只能删除已完成、失败或已取消的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许删除
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除同步任务
      tags:
      - 同步任务管理
    get:
      consumes:
      - application/json
      description: 根据任务ID获取同步任务的详细信息，包括关联的库信息、数据源信息等
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务详情
      tags:
      - 同步任务管理
    put:
      consumes:
      - application/json
      description: 更新同步任务的配置信息，只能更新处于 pending 状态的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.SyncTaskUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许更新
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新同步任务
      tags:
      - 同步任务管理
  /sync/tasks/{id}/cancel:
    post:
      consumes:
      - application/json
      description: 取消指定的同步任务，可以取消待执行或正在执行的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 取消成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许取消
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 取消同步任务
      tags:
      - 同步任务管理
  /sync/tasks/{id}/retry:
    post:
      consumes:
      - application/json
      description: 重试失败的同步任务，会创建一个新的任务实例
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 重试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.SyncTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许重试
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 重试同步任务
      tags:
      - 同步任务管理
  /sync/tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的同步任务，将任务提交给同步引擎执行
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许启动
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动同步任务
      tags:
      - 同步任务管理
  /sync/tasks/{id}/status:
    get:
      consumes:
      - application/json
      description: 获取同步任务的实时执行状态和进度信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.SyncTaskStatusResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务状态
      tags:
      - 同步任务管理
  /sync/tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止正在执行的同步任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 停止成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务状态不允许停止
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止同步任务
      tags:
      - 同步任务管理
  /sync/tasks/batch-delete:
    post:
      consumes:
      - application/json
      description: 批量删除多个同步任务，只能删除已完成、失败或已取消的任务
      parameters:
      - description: 批量删除请求
        in: body
        name: tasks
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchDeleteRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.BatchDeleteResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量删除同步任务
      tags:
      - 同步任务管理
  /sync/tasks/statistics:
    get:
      consumes:
      - application/json
      description: 获取同步任务的统计数据，包括各状态任务数量、成功率等
      parameters:
      - description: 库类型过滤
        in: query
        name: library_type
        type: string
      - description: 库ID过滤
        in: query
        name: library_id
        type: string
      - description: 数据源ID过滤
        in: query
        name: data_source_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.SyncTaskStatistics'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取同步任务统计信息
      tags:
      - 同步任务管理
  /tables/manage-schema:
    post:
      consumes:
      - application/json
      description: 通过PgMetaApi动态创建、修改、删除数据库表结构
      parameters:
      - description: 表结构操作请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.TableSchemaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 管理数据库表结构
      tags:
      - 数据基础库
  /thematic-interfaces:
    post:
      consumes:
      - application/json
      description: 创建新的主题接口
      parameters:
      - description: 主题接口信息
        in: body
        name: thematic_interface
        required: true
        schema:
          $ref: '#/definitions/models.ThematicInterface'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicInterface'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建主题接口
      tags:
      - 主题接口
  /thematic-interfaces/{id}:
    delete:
      description: 软删除主题接口（更新状态为inactive）
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除主题接口
      tags:
      - 主题接口
    get:
      description: 根据ID获取主题接口详细信息
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicInterface'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取主题接口详情
      tags:
      - 主题接口
    put:
      consumes:
      - application/json
      description: 更新主题接口信息
      parameters:
      - description: 主题接口ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: thematic_interface
        required: true
        schema:
          $ref: '#/definitions/models.ThematicInterface'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新主题接口
      tags:
      - 主题接口
  /thematic-libraries:
    post:
      consumes:
      - application/json
      description: 创建新的数据主题库
      parameters:
      - description: 数据主题库信息
        in: body
        name: library
        required: true
        schema:
          $ref: '#/definitions/models.ThematicLibrary'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicLibrary'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建数据主题库
      tags:
      - 数据主题库
  /thematic-libraries/{id}:
    delete:
      description: 删除数据主题库
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除数据主题库
      tags:
      - 数据主题库
    get:
      description: 根据ID获取数据主题库详细信息
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ThematicLibrary'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取数据主题库详情
      tags:
      - 数据主题库
    put:
      consumes:
      - application/json
      description: 更新数据主题库信息
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      - description: 更新信息
        in: body
        name: library
        required: true
        schema:
          $ref: '#/definitions/models.ThematicLibrary'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新数据主题库
      tags:
      - 数据主题库
  /thematic-libraries/{id}/publish:
    post:
      description: 将主题库状态更新为已发布
      parameters:
      - description: 数据主题库ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 发布数据主题库
      tags:
      - 数据主题库
swagger: "2.0"
