{
    "dat": {
        "cpu_usage_active": "CPU使用率（单位：%）",
        "cpu_usage_guest": "通过虚拟化运行其他操作系统的时间，也就是运行虚拟机的CPU时间占比（单位：%）",
        "cpu_usage_guest_nice": "以低优先级运行虚拟机的时间占比（单位：%）",
        "cpu_usage_idle": "CPU空闲率（单位：%）",
        "cpu_usage_iowait": "CPU等待I/O的时间占比（单位：%）",
        "cpu_usage_irq": "CPU处理硬中断的时间占比（单位：%）",
        "cpu_usage_nice": "低优先级用户态CPU时间占比，也就是进程nice值被调整为1-19之间的CPU时间。这里注意，nice可取值范围是-20到19，数值越大，优先级反而越低（单位：%）",
        "cpu_usage_softirq": "CPU处理软中断的时间占比（单位：%）",
        "cpu_usage_steal": "在虚拟机环境下有该指标，表示CPU被其他虚拟机争用的时间占比，超过20就表示争抢严重（单位：%）",
        "cpu_usage_system": "CPU内核态时间占比（单位：%）",
        "cpu_usage_user": "CPU用户态时间占比（单位：%）",
        "disk_device_error": "",
        "disk_free": "硬盘分区剩余量（单位：byte）",
        "disk_inodes_free": "硬盘分区inode剩余量",
        "disk_inodes_total": "硬盘分区inode总量",
        "disk_inodes_used": "硬盘分区inode使用量",
        "disk_total": "硬盘分区总量（单位：byte）",
        "disk_used": "硬盘分区使用量（单位：byte）",
        "disk_used_percent": "硬盘分区使用率（单位：%）",
        "diskio_io_time": "从设备视角来看I/O请求总时间，队列中有I/O请求就计数（单位：毫秒），counter类型，需要用函数求rate才有使用价值",
        "diskio_iops_in_progress": "已经分配给设备驱动且尚未完成的IO请求，不包含在队列中但尚未分配给设备驱动的IO请求，gauge类型",
        "diskio_merged_reads": "相邻读请求merge读的次数，counter类型",
        "diskio_merged_writes": "相邻写请求merge写的次数，counter类型",
        "diskio_read_bytes": "读取的byte数量，counter类型，需要用函数求rate才有使用价值",
        "diskio_read_time": "读请求总时间（单位：毫秒），counter类型，需要用函数求rate才有使用价值",
        "diskio_reads": "读请求次数，counter类型，需要用函数求rate才有使用价值",
        "diskio_weighted_io_time": "从I/O请求视角来看I/O等待总时间，如果同时有多个I/O请求，时间会叠加（单位：毫秒）",
        "diskio_write_bytes": "写入的byte数量，counter类型，需要用函数求rate才有使用价值",
        "diskio_write_time": "写请求总时间（单位：毫秒），counter类型，需要用函数求rate才有使用价值",
        "diskio_writes": "写请求次数，counter类型，需要用函数求rate才有使用价值",
        "docker_container_blkio_io_service_bytes_recursive_read": "",
        "docker_container_blkio_io_service_bytes_recursive_write": "",
        "docker_container_cpu_throttling_periods": "",
        "docker_container_cpu_throttling_throttled_periods": "",
        "docker_container_cpu_throttling_throttled_time": "",
        "docker_container_cpu_usage_in_kernelmode": "",
        "docker_container_cpu_usage_in_usermode": "",
        "docker_container_cpu_usage_percent": "",
        "docker_container_cpu_usage_system": "",
        "docker_container_cpu_usage_total": "",
        "docker_container_health_failing_streak": "",
        "docker_container_health_status": "",
        "docker_container_mem_limit": "",
        "docker_container_mem_max_usage": "",
        "docker_container_mem_usage": "",
        "docker_container_mem_usage_percent": "",
        "docker_container_net_rx_bytes": "",
        "docker_container_net_rx_dropped": "",
        "docker_container_net_rx_errors": "",
        "docker_container_net_rx_packets": "",
        "docker_container_net_tx_bytes": "",
        "docker_container_net_tx_dropped": "",
        "docker_container_net_tx_errors": "",
        "docker_container_net_tx_packets": "",
        "docker_container_status_finished_at": "",
        "docker_container_status_started_at": "",
        "docker_container_status_uptime": "",
        "docker_memory_total": "",
        "docker_n_containers": "",
        "docker_n_containers_paused": "",
        "docker_n_containers_running": "",
        "docker_n_containers_stopped": "",
        "docker_n_cpus": "",
        "docker_n_images": "",
        "docker_n_used_file_descriptors": "",
        "docker_up": "",
        "kernel_boot_time": "内核启动时间",
        "kernel_context_switches": "内核上下文切换次数",
        "kernel_entropy_avail": "linux系统内部的熵池",
        "kernel_interrupts": "内核中断次数",
        "kernel_processes_forked": "fork的进程数",
        "kernel_vmstat_oom_kill": "",
        "linux_sysctl_fs_aio_max_nr": "",
        "linux_sysctl_fs_aio_nr": "",
        "linux_sysctl_fs_dentry_age_limit": "",
        "linux_sysctl_fs_dentry_nr": "",
        "linux_sysctl_fs_dentry_unused_nr": "",
        "linux_sysctl_fs_dentry_want_pages": "",
        "linux_sysctl_fs_file_max": "",
        "linux_sysctl_fs_file_nr": "",
        "linux_sysctl_fs_inode_free_nr": "",
        "linux_sysctl_fs_inode_nr": "",
        "linux_sysctl_fs_inode_preshrink_nr": "",
        "mem_active": "活跃使用的内存总数(包括cache和buffer内存)",
        "mem_available": "应用程序可用内存数",
        "mem_available_percent": "内存剩余百分比(0~100)",
        "mem_buffered": "用来给文件做缓冲大小",
        "mem_cached": "被高速缓冲存储器（cache memory）用的内存的大小（等于 diskcache minus SwapCache ）",
        "mem_commit_limit": "根据超额分配比率（'vm.overcommit_ratio'），这是当前在系统上分配可用的内存总量，这个限制只是在模式2('vm.overcommit_memory')时启用",
        "mem_committed_as": "目前在系统上分配的内存量。是所有进程申请的内存的总和",
        "mem_dirty": "等待被写回到磁盘的内存大小",
        "mem_free": "空闲内存数",
        "mem_high_free": "未被使用的高位内存大小",
        "mem_high_total": "高位内存总大小（Highmem是指所有内存高于860MB的物理内存,Highmem区域供用户程序使用，或用于页面缓存。该区域不是直接映射到内核空间。内核必须使用不同的手法使用该段内存）",
        "mem_huge_page_size": "每个大页的大小",
        "mem_huge_pages_free": "池中尚未分配的 HugePages 数量",
        "mem_huge_pages_total": "预留HugePages的总个数",
        "mem_inactive": "空闲的内存数(包括free和avalible的内存)",
        "mem_low_free": "未被使用的低位大小",
        "mem_low_total": "低位内存总大小,低位可以达到高位内存一样的作用，而且它还能够被内核用来记录一些自己的数据结构",
        "mem_mapped": "设备和文件等映射的大小",
        "mem_page_tables": "管理内存分页页面的索引表的大小",
        "mem_shared": "多个进程共享的内存总额",
        "mem_slab": "内核数据结构缓存的大小，可以减少申请和释放内存带来的消耗",
        "mem_sreclaimable": "可收回Slab的大小",
        "mem_sunreclaim": "不可收回Slab的大小（SUnreclaim+SReclaimable＝Slab）",
        "mem_swap_cached": "被高速缓冲存储器（cache memory）用的交换空间的大小，已经被交换出来的内存，但仍然被存放在swapfile中。用来在需要的时候很快的被替换而不需要再次打开I/O端口",
        "mem_swap_free": "未被使用交换空间的大小",
        "mem_swap_total": "交换空间的总大小",
        "mem_total": "内存总数",
        "mem_used": "已用内存数",
        "mem_used_percent": "已用内存数百分比(0~100)",
        "mem_vmalloc_chunk": "最大的连续未被使用的vmalloc区域",
        "mem_vmalloc_total": "",
        "mem_vmalloc_used": "vmalloc已使用的虚拟内存大小",
        "mem_write_back": "正在被写回到磁盘的内存大小",
        "mem_write_back_tmp": "FUSE用于临时写回缓冲区的内存",
        "net_bits_recv": "",
        "net_bits_sent": "",
        "net_bytes_recv": "网卡收包总数(bytes)",
        "net_bytes_sent": "网卡发包总数(bytes)",
        "net_drop_in": "网卡收丢包数量",
        "net_drop_out": "网卡发丢包数量",
        "net_err_in": "网卡收包错误数量",
        "net_err_out": "网卡发包错误数量",
        "net_packets_recv": "网卡收包数量",
        "net_packets_sent": "网卡发包数量",
        "net_speed": "",
        "netstat_frag_inuse": "",
        "netstat_frag_memory": "",
        "netstat_raw_inuse": "",
        "netstat_sockets_used": "",
        "netstat_tcp_alloc": "",
        "netstat_tcp_close": "",
        "netstat_tcp_close_wait": "",
        "netstat_tcp_closing": "",
        "netstat_tcp_established": "ESTABLISHED状态的网络链接数",
        "netstat_tcp_fin_wait1": "FIN_WAIT1状态的网络链接数",
        "netstat_tcp_fin_wait2": "FIN_WAIT2状态的网络链接数",
        "netstat_tcp_inuse": "",
        "netstat_tcp_last_ack": "LAST_ACK状态的网络链接数",
        "netstat_tcp_listen": "LISTEN状态的网络链接数",
        "netstat_tcp_mem": "",
        "netstat_tcp_none": "",
        "netstat_tcp_orphan": "",
        "netstat_tcp_syn_recv": "SYN_RECV状态的网络链接数",
        "netstat_tcp_syn_sent": "SYN_SENT状态的网络链接数",
        "netstat_tcp_time_wait": "TIME_WAIT状态的网络链接数",
        "netstat_tcp_tw": "",
        "netstat_udp_inuse": "",
        "netstat_udp_mem": "",
        "netstat_udp_socket": "UDP状态的网络链接数",
        "netstat_udplite_inuse": "",
        "processes_blocked": "不可中断的睡眠状态下的进程数('U','D','L')",
        "processes_dead": "回收中的进程数('X')",
        "processes_idle": "挂起的空闲进程数('I')",
        "processes_paging": "分页进程数('P')",
        "processes_running": "运行中的进程数('R')",
        "processes_sleeping": "可中断进程数('S')",
        "processes_stopped": "暂停状态进程数('T')",
        "processes_total": "总进程数",
        "processes_total_threads": "总线程数",
        "processes_unknown": "未知状态进程数",
        "processes_zombies": "僵尸态进程数('Z')",
        "system_load1": "1分钟平均load值",
        "system_load15": "15分钟平均load值",
        "system_load5": "5分钟平均load值",
        "system_load_norm_1": "",
        "system_load_norm_15": "",
        "system_load_norm_5": "",
        "system_n_cpus": "CPU核数",
        "system_n_users": "用户数",
        "system_uptime": "系统启动时间"
    },
    "err": ""
}